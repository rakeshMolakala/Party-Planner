Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    package=\"com.example.partyplanner\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.CAMERA\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@drawable/logo\"\n        android:label=\"@string/app_name\"\n        android:requestLegacyExternalStorage=\"true\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.Partyplanner\">\n\n        <activity\n            android:name=\".PreferencesActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".ChatWindowActivity\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".ChatTabItem\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".RequestListItem\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"false\"\n            tools:ignore=\"Instantiatable\" />\n        <activity\n            android:name=\".ProfilePictureActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".EditDetailsActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".ForgotPasswordActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".MainActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".SignupActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".LoginActivity\"\n            android:configChanges=\"orientation|screenSize\"\n            android:exported=\"true\"\n            android:launchMode=\"singleInstance\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/AndroidManifest.xml	(date 1651499276045)
@@ -19,6 +19,19 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.Partyplanner">
 
+        <activity
+            android:name=".EventInvite"
+            android:configChanges="orientation|screenSize"
+            android:exported="false">
+        </activity>
+        <activity
+            android:name=".EventActivity"
+            android:configChanges="orientation|screenSize"
+            android:exported="false" />
+        <activity
+            android:name=".ViewProfile"
+            android:configChanges="orientation|screenSize"
+            android:exported="false" />
         <activity
             android:name=".PreferencesActivity"
             android:configChanges="orientation|screenSize"
Index: app/src/main/java/com/example/partyplanner/EditDetailsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.app.AlertDialog;\nimport android.content.ContentResolver;\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.telephony.PhoneNumberUtils;\nimport android.util.Patterns;\nimport android.view.View;\nimport android.webkit.MimeTypeMap;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.github.drjacky.imagepicker.ImagePicker;\nimport com.google.android.material.textfield.TextInputLayout;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.auth.UserProfileChangeRequest;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\nimport com.google.firebase.storage.FirebaseStorage;\nimport com.google.firebase.storage.StorageReference;\nimport com.squareup.picasso.Picasso;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Map;\n\npublic class EditDetailsActivity extends AppCompatActivity {\n    ImageView editPhoto;\n    TextInputLayout usernameUpdateHolder, phoneNumberUpdateHolder, addressLine1Holder, addressLine2Holder, addressLine3Holder;\n    TextView changePhoto;\n    Button cancel, update, deleteAccount;\n    ProgressBar progressbarUpdate;\n    List<String> requestsSent, requestsReceived, address;\n    List<List<String>> preferences;\n    Map<String, String> friendsList;\n\n    private DatabaseReference databaseReference;\n    private FirebaseAuth authentication;\n    private FirebaseUser firebaseUser;\n    private Uri uri;\n    private StorageReference storageReference;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        getSupportActionBar().hide();\n        setContentView(R.layout.activity_editdetails);\n\n        authentication = FirebaseAuth.getInstance();\n        databaseReference = FirebaseDatabase.getInstance().getReference().child(\"Users\");\n        firebaseUser = authentication.getCurrentUser();\n        storageReference = FirebaseStorage.getInstance().getReference().child(\"ProfilePictures\");\n\n        usernameUpdateHolder = findViewById(R.id.usernameUpdateHolder);\n        phoneNumberUpdateHolder = findViewById(R.id.phoneNumberUpdateHolder);\n        addressLine1Holder = findViewById(R.id.addressLine1Holder);\n        addressLine2Holder = findViewById(R.id.addressLine2Holder);\n        addressLine3Holder = findViewById(R.id.addressLine3Holder);\n        changePhoto = findViewById(R.id.changePhoto);\n        editPhoto = findViewById(R.id.editPhoto);\n        cancel = findViewById(R.id.cancelEdit);\n        update = findViewById(R.id.updateEdit);\n        address = new ArrayList<>();\n        deleteAccount = findViewById(R.id.deleteAccount);\n        progressbarUpdate = findViewById(R.id.progressbarUpdate);\n\n        if (firebaseUser == null) {\n            Toast.makeText(EditDetailsActivity.this, \"Something went wrong! Your credentials are not available at the moment\", Toast.LENGTH_LONG).show();\n            progressbarUpdate.setVisibility(View.GONE);\n        } else {\n            Uri uri = firebaseUser.getPhotoUrl();\n            Picasso.with(EditDetailsActivity.this).load(uri).into(editPhoto);\n            String userId = firebaseUser.getUid();\n            databaseReference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                @Override\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\n                    User details = snapshot.getValue(User.class);\n                    if (details != null) {\n                        usernameUpdateHolder.getEditText().setText(details.username);\n                        phoneNumberUpdateHolder.getEditText().setText(details.number);\n                        addressLine1Holder.getEditText().setText(details.address.get(0));\n                        addressLine2Holder.getEditText().setText(details.address.get(1));\n                        addressLine3Holder.getEditText().setText(details.address.get(2));\n                        requestsReceived = details.requestsReceived;\n                        requestsSent = details.requestsSent;\n                        preferences = details.preferences;\n                        friendsList = details.friendsList;\n                    } else {\n                        Toast.makeText(EditDetailsActivity.this, \"Something went wrong!\", Toast.LENGTH_SHORT).show();\n                    }\n                    progressbarUpdate.setVisibility(View.GONE);\n                }\n\n                @Override\n                public void onCancelled(@NonNull DatabaseError error) {\n                    Toast.makeText(EditDetailsActivity.this, \"Something went wrong!\", Toast.LENGTH_SHORT).show();\n                    progressbarUpdate.setVisibility(View.GONE);\n                }\n            });\n        }\n\n\n        changePhoto.setOnClickListener(view -> ImagePicker.Companion.with(EditDetailsActivity.this).crop().cropOval().start());\n\n        editPhoto.setOnClickListener(view -> ImagePicker.Companion.with(EditDetailsActivity.this).crop().cropOval().start());\n\n        cancel.setOnClickListener(view -> {\n            Intent i = new Intent(EditDetailsActivity.this, MainActivity.class);\n            finish();\n            startActivity(i);\n        });\n\n        update.setOnClickListener(view -> {\n            String name = usernameUpdateHolder.getEditText().getText().toString().trim();\n            String phone = PhoneNumberUtils.formatNumber(phoneNumberUpdateHolder.getEditText().getText().toString().trim());\n            String address1 = addressLine1Holder.getEditText().getText().toString().trim();\n            String address2 = addressLine2Holder.getEditText().getText().toString().trim();\n            String address3 = addressLine3Holder.getEditText().getText().toString().trim();\n\n            if (name.isEmpty()) {\n                usernameUpdateHolder.setError(\"Name is required!\");\n                usernameUpdateHolder.requestFocus();\n                return;\n            } else {\n                usernameUpdateHolder.setError(null);\n            }\n\n//            if (address1.isEmpty()) {\n//                addressLine1Holder.setError(\"Street and unit number is required!\");\n//                addressLine1Holder.requestFocus();\n//                return;\n//            } else {\n//                addressLine1Holder.setError(null);\n//            }\n//\n//            if (address2.isEmpty()) {\n//                addressLine2Holder.setError(\"City and State is required!\");\n//                addressLine2Holder.requestFocus();\n//                return;\n//            } else {\n//                addressLine2Holder.setError(null);\n//            }\n//\n//            if (address3.isEmpty()) {\n//                addressLine3Holder.setError(\"Pin is required!\");\n//                addressLine3Holder.requestFocus();\n//                return;\n//            } else {\n//                addressLine3Holder.setError(null);\n//            }\n\n            if (phone.isEmpty()) {\n                phoneNumberUpdateHolder.setError(\"Phone number is required!\");\n                phoneNumberUpdateHolder.requestFocus();\n                return;\n            } else {\n                phoneNumberUpdateHolder.setError(null);\n            }\n\n            if (phone.length() < 10) {\n                phoneNumberUpdateHolder.setError(\"Phone number must consist of atleast 10 digits!\");\n                phoneNumberUpdateHolder.requestFocus();\n                return;\n            } else {\n                phoneNumberUpdateHolder.setError(null);\n            }\n\n            if (!Patterns.PHONE.matcher(phone).matches()) {\n                phoneNumberUpdateHolder.setError(\"Check format of the given phone number!\");\n                phoneNumberUpdateHolder.requestFocus();\n                return;\n            } else {\n                phoneNumberUpdateHolder.setError(null);\n            }\n\n            progressbarUpdate.setVisibility(View.VISIBLE);\n            address.add(0, address1);\n            address.add(1, address2);\n            address.add(2, address3);\n            String currUserPhotoUrl;\n            if (firebaseUser.getPhotoUrl() != null) {\n                currUserPhotoUrl = firebaseUser.getPhotoUrl().toString();\n            }\n            else {\n                currUserPhotoUrl = \"\\\"jkh\\\"\";\n            }\n            User user = new User(name, firebaseUser.getEmail(), phone, address,\n                    requestsReceived, requestsSent, preferences, friendsList, currUserPhotoUrl);\n            String userId = firebaseUser.getUid();\n            if (uri != null) {\n                StorageReference storageReference1 = storageReference.child(userId + \".\" + getFilesExtension(uri));\n                storageReference1.putFile(uri).addOnSuccessListener(taskSnapshot -> storageReference1.getDownloadUrl().addOnSuccessListener(uri1 -> {\n                    firebaseUser = authentication.getCurrentUser();\n                    UserProfileChangeRequest request = new UserProfileChangeRequest.Builder().setPhotoUri(uri1).build();\n                    firebaseUser.updateProfile(request);\n                    databaseReference.child(userId).child(\"profileImage\").setValue(uri1.toString());\n                }));\n            }\n\n            databaseReference.child(userId).setValue(user).addOnCompleteListener(task -> {\n                if (task.isSuccessful()) {\n                    UserProfileChangeRequest request = new UserProfileChangeRequest.Builder().setDisplayName(name).build();\n                    firebaseUser.updateProfile(request);\n                    Toast.makeText(EditDetailsActivity.this, \"Update Successful!\", Toast.LENGTH_LONG).show();\n                    Intent intent = new Intent(EditDetailsActivity.this, MainActivity.class);\n                    finish();\n                    startActivity(intent);\n                } else {\n                    try {\n                        throw task.getException();\n                    } catch (Exception e) {\n                        Toast.makeText(EditDetailsActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();\n                    }\n                }\n                progressbarUpdate.setVisibility(View.GONE);\n            });\n        });\n\n        deleteAccount.setOnClickListener(view -> {\n            AlertDialog.Builder dialog = new AlertDialog.Builder(EditDetailsActivity.this);\n            dialog.setTitle(\"Are you sure?\");\n            dialog.setMessage(\"Deleting this account will result in completely removing your account from the system and you won't be able to retrieve it later.\");\n            dialog.setPositiveButton(\"Delete\", (dialogInterface, i) -> firebaseUser.delete().addOnCompleteListener(task -> {\n\n                progressbarUpdate.setVisibility(View.VISIBLE);\n                if (task.isSuccessful()) {\n                    databaseReference.addValueEventListener(new ValueEventListener() {\n                        @Override\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\n                            databaseReference.child(firebaseUser.getUid()).removeValue().addOnSuccessListener(aVoid -> {\n                                firebaseUser.delete();\n                            });\n                        }\n\n                        @Override\n                        public void onCancelled(@NonNull DatabaseError error) {\n\n                        }\n                    });\n                    progressbarUpdate.setVisibility(View.GONE);\n                    Toast.makeText(EditDetailsActivity.this, \"Account permanently deleted!!!\", Toast.LENGTH_LONG).show();\n                    authentication.signOut();\n                    Intent i1 = new Intent(EditDetailsActivity.this, LoginActivity.class);\n                    finish();\n                    i1.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK);\n                    startActivity(i1);\n                } else {\n                    Toast.makeText(EditDetailsActivity.this, task.getException().getMessage(), Toast.LENGTH_LONG).show();\n                }\n            }));\n            dialog.setNegativeButton(\"Cancel\", (dialogInterface, i) -> dialogInterface.dismiss());\n            dialog.create().show();\n        });\n\n    }\n\n    private String getFilesExtension(Uri uri) {\n        ContentResolver resolver = getContentResolver();\n        MimeTypeMap mime = MimeTypeMap.getSingleton();\n        return mime.getExtensionFromMimeType(resolver.getType(uri));\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        uri = data.getData();\n        editPhoto.setImageURI(uri);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/EditDetailsActivity.java b/app/src/main/java/com/example/partyplanner/EditDetailsActivity.java
--- a/app/src/main/java/com/example/partyplanner/EditDetailsActivity.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/EditDetailsActivity.java	(date 1651505456011)
@@ -83,13 +83,17 @@
             progressbarUpdate.setVisibility(View.GONE);
         } else {
             Uri uri = firebaseUser.getPhotoUrl();
-            Picasso.with(EditDetailsActivity.this).load(uri).into(editPhoto);
             String userId = firebaseUser.getUid();
             databaseReference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
                 @Override
                 public void onDataChange(@NonNull DataSnapshot snapshot) {
                     User details = snapshot.getValue(User.class);
                     if (details != null) {
+                        if (details.profileImage.length()==5) {
+                            editPhoto.setImageResource(R.drawable.user);
+                        } else {
+                            Picasso.with(EditDetailsActivity.this).load(uri).into(editPhoto);
+                        }
                         usernameUpdateHolder.getEditText().setText(details.username);
                         phoneNumberUpdateHolder.getEditText().setText(details.number);
                         addressLine1Holder.getEditText().setText(details.address.get(0));
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:id=\"@+id/textView4\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentBottom=\"true\"\n        android:text=\"Home\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        tools:ignore=\"MissingConstraints\" />\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
--- a/app/src/main/res/layout/fragment_home.xml	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1650751315855)
@@ -3,18 +3,278 @@
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    tools:context=".HomeFragment">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="130dp"
+            android:background="@drawable/accountbackground"
+            android:orientation="vertical" />
+
+        <ScrollView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
 
-    <TextView
-        android:id="@+id/textView4"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentEnd="true"
-        android:layout_alignParentBottom="true"
-        android:text="Home"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        tools:ignore="MissingConstraints" />
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical">
+
+                <RelativeLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="24dp"
+                    android:layout_marginTop="24dp"
+                    android:layout_marginRight="24dp">
+
+                    <TextView
+                        android:id="@+id/templatesText"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/my_templates"
+                        android:textColor="@color/white"
+                        android:textSize="24sp"
+                        android:textStyle="bold"
+                        tools:ignore="RelativeOverlap" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_below="@+id/templatesText"
+                        android:layout_marginTop="6dp"
+                        android:text="@string/_6_events"
+                        android:textColor="@color/white"
+                        android:textSize="18sp" />
+
+                    <androidx.cardview.widget.CardView
+                        android:layout_width="80dp"
+                        android:layout_height="80dp"
+                        android:layout_alignParentEnd="true"
+                        app:cardCornerRadius="100dp">
+
+                        <ImageView
+                            android:id="@+id/homeProfile"
+                            android:layout_width="80dp"
+                            android:layout_height="80dp"
+                            android:contentDescription="@string/profile_picture"
+                            android:scaleType="centerCrop"
+                            android:src="@drawable/user" />
+                    </androidx.cardview.widget.CardView>
+                </RelativeLayout>
+
+                <GridLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="40dp"
+                    android:alignmentMode="alignMargins"
+                    android:columnCount="2"
+                    android:columnOrderPreserved="false"
+                    android:rowCount="4">
+
+                    <androidx.cardview.widget.CardView
+                        android:id="@+id/birthdays"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_rowWeight="1"
+                        android:layout_columnWeight="1"
+                        android:layout_margin="12dp"
+                        app:cardCornerRadius="12dp"
+                        app:cardElevation="6dp">
+
+                        <LinearLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:gravity="center"
+                            android:orientation="vertical"
+                            android:padding="16dp">
+
+                            <ImageView
+                                android:layout_width="100dp"
+                                android:layout_height="100dp"
+                                android:contentDescription="@string/birthdays"
+                                android:scaleType="fitXY"
+                                android:src="@drawable/birthday" />
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginTop="12dp"
+                                android:text="@string/birthdays"
+                                android:textSize="18sp" />
+                        </LinearLayout>
+                    </androidx.cardview.widget.CardView>
+
+                    <androidx.cardview.widget.CardView
+                        android:id="@+id/wedding"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_rowWeight="1"
+                        android:layout_columnWeight="1"
+                        android:layout_margin="12dp"
+                        app:cardCornerRadius="12dp"
+                        app:cardElevation="6dp">
+
+                        <LinearLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:gravity="center"
+                            android:orientation="vertical"
+                            android:padding="16dp">
+
+                            <ImageView
+                                android:layout_width="100dp"
+                                android:layout_height="100dp"
+                                android:contentDescription="@string/wedding"
+                                android:scaleType="fitXY"
+                                android:src="@drawable/wedding" />
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginTop="12dp"
+                                android:text="@string/wedding"
+                                android:textSize="18sp" />
+                        </LinearLayout>
+                    </androidx.cardview.widget.CardView>
+
+                    <androidx.cardview.widget.CardView
+                        android:id="@+id/pizza"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_rowWeight="1"
+                        android:layout_columnWeight="1"
+                        android:layout_margin="12dp"
+                        app:cardCornerRadius="12dp"
+                        app:cardElevation="6dp">
+
+                        <LinearLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:gravity="center"
+                            android:orientation="vertical"
+                            android:padding="16dp">
+
+                            <ImageView
+                                android:layout_width="100dp"
+                                android:layout_height="100dp"
+                                android:contentDescription="@string/pizza"
+                                android:scaleType="fitXY"
+                                android:src="@drawable/pizza" />
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginTop="12dp"
+                                android:text="@string/pizza"
+                                android:textSize="18sp" />
+                        </LinearLayout>
+                    </androidx.cardview.widget.CardView>
+
+                    <androidx.cardview.widget.CardView
+                        android:id="@+id/christmas"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_rowWeight="1"
+                        android:layout_columnWeight="1"
+                        android:layout_margin="12dp"
+                        app:cardCornerRadius="12dp"
+                        app:cardElevation="6dp">
+
+                        <LinearLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:gravity="center"
+                            android:orientation="vertical"
+                            android:padding="16dp">
+
+                            <ImageView
+                                android:layout_width="100dp"
+                                android:layout_height="100dp"
+                                android:contentDescription="@string/christmas"
+                                android:scaleType="fitXY"
+                                android:src="@drawable/christmas" />
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginTop="12dp"
+                                android:text="@string/christmas"
+                                android:textSize="18sp" />
+                        </LinearLayout>
+                    </androidx.cardview.widget.CardView>
+
+                    <androidx.cardview.widget.CardView
+                        android:id="@+id/halloween"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_rowWeight="1"
+                        android:layout_columnWeight="1"
+                        android:layout_margin="12dp"
+                        app:cardCornerRadius="12dp"
+                        app:cardElevation="6dp">
+
+                        <LinearLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:gravity="center"
+                            android:orientation="vertical"
+                            android:padding="16dp">
+
+                            <ImageView
+                                android:layout_width="100dp"
+                                android:layout_height="100dp"
+                                android:contentDescription="@string/halloween"
+                                android:scaleType="fitXY"
+                                android:src="@drawable/halloween" />
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginTop="12dp"
+                                android:text="@string/halloween"
+                                android:textSize="18sp" />
+                        </LinearLayout>
+                    </androidx.cardview.widget.CardView>
+
+                    <androidx.cardview.widget.CardView
+                        android:id="@+id/dance"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_rowWeight="1"
+                        android:layout_columnWeight="1"
+                        android:layout_margin="12dp"
+                        app:cardCornerRadius="12dp"
+                        app:cardElevation="6dp">
+
+                        <LinearLayout
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:gravity="center"
+                            android:orientation="vertical"
+                            android:padding="16dp">
+
+                            <ImageView
+                                android:layout_width="100dp"
+                                android:layout_height="100dp"
+                                android:contentDescription="@string/dance"
+                                android:scaleType="fitXY"
+                                android:src="@drawable/dance" />
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:layout_marginTop="12dp"
+                                android:text="@string/dance"
+                                android:textSize="18sp" />
+                        </LinearLayout>
+                    </androidx.cardview.widget.CardView>
+                </GridLayout>
+            </LinearLayout>
+        </ScrollView>
+    </RelativeLayout>
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\n\npublic class HomeFragment extends Fragment {\n\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_home, container, false);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/HomeFragment.java b/app/src/main/java/com/example/partyplanner/HomeFragment.java
--- a/app/src/main/java/com/example/partyplanner/HomeFragment.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/HomeFragment.java	(date 1651505867008)
@@ -1,19 +1,94 @@
 package com.example.partyplanner;
 
+import android.content.Intent;
+import android.net.Uri;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.cardview.widget.CardView;
 import androidx.fragment.app.Fragment;
 
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.squareup.picasso.Picasso;
+
+import java.io.File;
+
 public class HomeFragment extends Fragment {
 
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.fragment_home, container, false);
+        ViewGroup viewGroup = (ViewGroup) inflater.inflate(R.layout.fragment_home, container, false);
+
+        FirebaseAuth authentication = FirebaseAuth.getInstance();
+        FirebaseUser firebaseUser = authentication.getCurrentUser();
+
+        ImageView homeProfile = viewGroup.findViewById(R.id.homeProfile);
+        CardView birthdays = viewGroup.findViewById(R.id.birthdays);
+        CardView wedding = viewGroup.findViewById(R.id.wedding);
+        CardView pizza = viewGroup.findViewById(R.id.pizza);
+        CardView christmas = viewGroup.findViewById(R.id.christmas);
+        CardView halloween = viewGroup.findViewById(R.id.halloween);
+        CardView dance = viewGroup.findViewById(R.id.dance);
+
+        if (firebaseUser == null) {
+            Toast.makeText(HomeFragment.this.getActivity(), "Something went wrong! Your credentials are not available at the moment", Toast.LENGTH_LONG).show();
+        } else {
+            Uri uri = firebaseUser.getPhotoUrl();
+//            File f = new File(uri.getPath());
+//            if (f.length()==5) {
+//                homeProfile.setImageResource(R.drawable.user);
+//            } else {
+//                Picasso.with(HomeFragment.this.getActivity()).load(uri).into(homeProfile);
+//            }
+        }
+
+        homeProfile.setOnClickListener(view -> startActivity(new Intent(HomeFragment.this.getActivity(), ProfilePictureActivity.class)));
+
+        birthdays.setOnClickListener(view -> {
+            Intent i = new Intent(HomeFragment.this.getActivity(), EventActivity.class);
+            i.putExtra("event", "birthday");
+            startActivity(i);
+
+        });
+
+        wedding.setOnClickListener(view -> {
+            Intent i = new Intent(HomeFragment.this.getActivity(), EventActivity.class);
+            i.putExtra("event", "wedding");
+            startActivity(i);
+        });
+
+        pizza.setOnClickListener(view -> {
+            Intent i = new Intent(HomeFragment.this.getActivity(), EventActivity.class);
+            i.putExtra("event", "pizza");
+            startActivity(i);
+        });
+
+        christmas.setOnClickListener(view -> {
+            Intent i = new Intent(HomeFragment.this.getActivity(), EventActivity.class);
+            i.putExtra("event", "christmas");
+            startActivity(i);
+        });
+
+        halloween.setOnClickListener(view -> {
+            Intent i = new Intent(HomeFragment.this.getActivity(), EventActivity.class);
+            i.putExtra("event", "halloween");
+            startActivity(i);
+        });
+
+        dance.setOnClickListener(view -> {
+            Intent i = new Intent(HomeFragment.this.getActivity(), EventActivity.class);
+            i.putExtra("event", "dance");
+            startActivity(i);
+        });
+
+        return viewGroup;
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/SignupActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.telephony.PhoneNumberUtils;\nimport android.util.Patterns;\nimport android.view.View;\nimport android.view.inputmethod.EditorInfo;\nimport android.widget.Button;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.google.android.material.textfield.TextInputLayout;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.database.FirebaseDatabase;\n\nimport java.net.URL;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class SignupActivity extends AppCompatActivity {\n    List<String> requestsReceived, requestsSent, address, foods, drinks;\n    List<List<String>> preferences;\n    Map<String, String> friendsList = new HashMap<>();\n    private TextInputLayout usernameHolder, emailSignupHolder, phoneNumberHolder, passwordSignupHolder, rePasswordSignupHolder;\n    private ProgressBar progressbar;\n    private FirebaseAuth authentication;\n    private String profilePhoto;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        getSupportActionBar().hide();\n        setContentView(R.layout.activity_signup);\n\n        authentication = FirebaseAuth.getInstance();\n        usernameHolder = findViewById(R.id.usernameHolder);\n        emailSignupHolder = findViewById(R.id.emailSignupHolder);\n        phoneNumberHolder = findViewById(R.id.phoneNumberHolder);\n        passwordSignupHolder = findViewById(R.id.passwordSignupHolder);\n        rePasswordSignupHolder = findViewById(R.id.rePasswordSignupHolder);\n        TextView stol = findViewById(R.id.SignupToLogin);\n        Button signup = findViewById(R.id.signup);\n        requestsReceived = Collections.singletonList(\"\");\n        requestsSent = Collections.singletonList(\"\");\n        address = new ArrayList<>(Arrays.asList(\"\", \"\", \"\"));\n        foods = new ArrayList<>(Arrays.asList(\"Food 1\", \"Food 2\", \"Food 3\"));\n        drinks = new ArrayList<>(Arrays.asList(\"Drink 1\", \"Drink 2\", \"Drink 3\"));\n        preferences = new ArrayList<>(Arrays.asList(foods, drinks));\n        friendsList.put(\"dummy\", \" \");\n        profilePhoto = \"\\\"jkh\\\"\";\n        progressbar = findViewById(R.id.progressbarSignup);\n\n        signup.setOnClickListener(view -> {\n            rePasswordSignupHolder.getEditText().onEditorAction(EditorInfo.IME_ACTION_DONE);\n\n            String name = usernameHolder.getEditText().getText().toString().trim();\n            String email = emailSignupHolder.getEditText().getText().toString().trim();\n            String phone = PhoneNumberUtils.formatNumber(phoneNumberHolder.getEditText().getText().toString().trim());\n            String password = passwordSignupHolder.getEditText().getText().toString().trim();\n            String conPassword = rePasswordSignupHolder.getEditText().getText().toString().trim();\n\n            if (name.isEmpty()) {\n                usernameHolder.setError(\"Username is required!\");\n                usernameHolder.requestFocus();\n                return;\n            } else {\n                usernameHolder.setError(null);\n            }\n\n            if (email.isEmpty()) {\n                emailSignupHolder.setError(\"Email is required!\");\n                emailSignupHolder.requestFocus();\n                return;\n            } else {\n                emailSignupHolder.setError(null);\n            }\n\n            if (!Patterns.EMAIL_ADDRESS.matcher(email).matches()) {\n                emailSignupHolder.setError(\"Please enter a valid email!\");\n                emailSignupHolder.requestFocus();\n                return;\n            } else {\n                emailSignupHolder.setError(null);\n            }\n\n            if (phone.isEmpty()) {\n                phoneNumberHolder.setError(\"Phone number is required!\");\n                phoneNumberHolder.requestFocus();\n                return;\n            } else {\n                phoneNumberHolder.setError(null);\n            }\n\n            if (phone.length() < 10) {\n                phoneNumberHolder.setError(\"Phone number must consist of atleast 10 digits!\");\n                phoneNumberHolder.requestFocus();\n                return;\n            } else {\n                phoneNumberHolder.setError(null);\n            }\n\n            if (!Patterns.PHONE.matcher(phone).matches()) {\n                phoneNumberHolder.setError(\"Check format of the given phone number!\");\n                phoneNumberHolder.requestFocus();\n                return;\n            } else {\n                phoneNumberHolder.setError(null);\n            }\n\n            if (password.isEmpty()) {\n                passwordSignupHolder.setError(\"Password is required!\");\n                passwordSignupHolder.requestFocus();\n                return;\n            } else {\n                passwordSignupHolder.setError(null);\n            }\n\n            if (password.length() < 6) {\n                passwordSignupHolder.setError(\"Password should consist a minimum of 6 characters!\");\n                passwordSignupHolder.requestFocus();\n                return;\n            } else {\n                passwordSignupHolder.setError(null);\n            }\n\n            if (conPassword.isEmpty()) {\n                rePasswordSignupHolder.setError(\"Confirm Password!\");\n                rePasswordSignupHolder.requestFocus();\n                return;\n            } else {\n                rePasswordSignupHolder.setError(null);\n            }\n\n            if (!password.equals(conPassword)) {\n                rePasswordSignupHolder.setError(\"Passwords do not match!\");\n                rePasswordSignupHolder.requestFocus();\n                return;\n            } else {\n                rePasswordSignupHolder.setError(null);\n            }\n\n            progressbar.setVisibility(View.VISIBLE);\n            authentication.createUserWithEmailAndPassword(email, password).addOnCompleteListener(task -> {\n                if (task.isSuccessful()) {\n                    User user = new User(name, email, phone, address,\n                            requestsReceived, requestsSent, preferences, friendsList, profilePhoto);\n                    FirebaseDatabase.getInstance().getReference(\"Users\").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).setValue(user).addOnCompleteListener(task1 -> {\n                        if (task1.isSuccessful()) {\n                            Toast.makeText(SignupActivity.this, \"Successfully registered as \" + name, Toast.LENGTH_LONG).show();\n                            Intent i = new Intent(SignupActivity.this, LoginActivity.class);\n                            finish();\n                            startActivity(i);\n                        } else {\n                            Toast.makeText(SignupActivity.this, \"Failed to register! Try again.\", Toast.LENGTH_LONG).show();\n                        }\n                        progressbar.setVisibility(View.GONE);\n                    });\n                } else {\n                    Toast.makeText(SignupActivity.this, \"Failed to register! Try again.\", Toast.LENGTH_LONG).show();\n                    progressbar.setVisibility(View.GONE);\n                }\n            });\n        });\n\n        stol.setOnClickListener(view -> {\n            Intent i = new Intent(SignupActivity.this, LoginActivity.class);\n            finish();\n            startActivity(i);\n        });\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/SignupActivity.java b/app/src/main/java/com/example/partyplanner/SignupActivity.java
--- a/app/src/main/java/com/example/partyplanner/SignupActivity.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/SignupActivity.java	(date 1651473665132)
@@ -17,7 +17,6 @@
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.database.FirebaseDatabase;
 
-import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
Index: app/src/main/java/com/example/partyplanner/AccountFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.content.Intent;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\nimport com.squareup.picasso.Picasso;\n\npublic class AccountFragment extends Fragment {\n    private TextView accountName;\n    private TextView emailAccount;\n    private TextView phoneNumberAccount;\n    private TextView addressLine1Account;\n    private TextView addressLine2Account;\n    private TextView addressLine3Account;\n    private ProgressBar progressbar;\n    private ViewGroup viewGroup;\n\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        viewGroup = (ViewGroup) inflater.inflate(R.layout.fragment_account, container, false);\n        return viewGroup;\n    }\n\n    @Override\n    public void onStart() {\n        super.onStart();\n\n        FirebaseAuth authentication = FirebaseAuth.getInstance();\n        FirebaseUser firebaseUser = authentication.getCurrentUser();\n\n        accountName = viewGroup.findViewById(R.id.accountName);\n        emailAccount = viewGroup.findViewById(R.id.emailAccount);\n        phoneNumberAccount = viewGroup.findViewById(R.id.phoneNumberAccount);\n        addressLine1Account = viewGroup.findViewById(R.id.addressLine1Account);\n        addressLine2Account = viewGroup.findViewById(R.id.addressLine2Account);\n        addressLine3Account = viewGroup.findViewById(R.id.addressLine3Account);\n        TextView preferencesEdit = viewGroup.findViewById(R.id.preferencesEdit);\n        LinearLayout logout = viewGroup.findViewById(R.id.logout);\n        Button editDetails = viewGroup.findViewById(R.id.editDetails);\n        ImageView profilePicture = viewGroup.findViewById(R.id.profilePicture);\n        progressbar = viewGroup.findViewById(R.id.progressbarLogout);\n\n        progressbar.setVisibility(View.VISIBLE);\n        if (firebaseUser == null) {\n            Toast.makeText(AccountFragment.this.getActivity(), \"Something went wrong! Your credentials are not available at the moment\", Toast.LENGTH_LONG).show();\n            progressbar.setVisibility(View.GONE);\n        } else {\n            String userId = firebaseUser.getUid();\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child(\"Users\");\n            reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                @Override\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\n                    User details = snapshot.getValue(User.class);\n                    if (details != null) {\n                        Picasso.with(AccountFragment.this.getActivity()).load(Uri.parse(details.profileImage)).into(profilePicture);\n                        accountName.setText(details.username);\n                        emailAccount.setText(firebaseUser.getEmail());\n                        phoneNumberAccount.setText(details.number);\n                        addressLine1Account.setText(details.address.get(0));\n                        addressLine2Account.setText(details.address.get(1));\n                        addressLine3Account.setText(details.address.get(2));\n                    }\n                    progressbar.setVisibility(View.GONE);\n                }\n\n                @Override\n                public void onCancelled(@NonNull DatabaseError error) {\n                    Toast.makeText(AccountFragment.this.getActivity(), \"Something went wrong!\", Toast.LENGTH_SHORT).show();\n                    progressbar.setVisibility(View.GONE);\n                }\n            });\n        }\n\n        profilePicture.setOnClickListener(view -> startActivity(new Intent(AccountFragment.this.getActivity(), ProfilePictureActivity.class)));\n\n        editDetails.setOnClickListener(view -> startActivity(new Intent(AccountFragment.this.getActivity(), EditDetailsActivity.class)));\n\n        preferencesEdit.setOnClickListener(view -> startActivity(new Intent(AccountFragment.this.getActivity(), PreferencesActivity.class)));\n\n        logout.setOnClickListener(view -> {\n            progressbar.setVisibility(View.VISIBLE);\n            FirebaseAuth.getInstance().signOut();\n            Intent i = new Intent(AccountFragment.this.getActivity(), LoginActivity.class);\n            getActivity().finish();\n            AccountFragment.this.getActivity().startActivity(i);\n            progressbar.setVisibility(View.GONE);\n            Toast.makeText(AccountFragment.this.getActivity(), \"Successfully logged out!\", Toast.LENGTH_SHORT).show();\n        });\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/AccountFragment.java b/app/src/main/java/com/example/partyplanner/AccountFragment.java
--- a/app/src/main/java/com/example/partyplanner/AccountFragment.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/AccountFragment.java	(date 1651505175590)
@@ -3,7 +3,6 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -17,8 +16,6 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
 
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
@@ -77,13 +74,19 @@
                 public void onDataChange(@NonNull DataSnapshot snapshot) {
                     User details = snapshot.getValue(User.class);
                     if (details != null) {
-                        Picasso.with(AccountFragment.this.getActivity()).load(Uri.parse(details.profileImage)).into(profilePicture);
+                        if (details.profileImage.length()==5) {
+                            profilePicture.setImageResource(R.drawable.user);
+                        } else {
+                            Picasso.with(AccountFragment.this.getActivity()).load(Uri.parse(details.profileImage)).into(profilePicture);
+                        }
                         accountName.setText(details.username);
                         emailAccount.setText(firebaseUser.getEmail());
                         phoneNumberAccount.setText(details.number);
                         addressLine1Account.setText(details.address.get(0));
                         addressLine2Account.setText(details.address.get(1));
                         addressLine3Account.setText(details.address.get(2));
+                    } else {
+                        Toast.makeText(AccountFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
                     }
                     progressbar.setVisibility(View.GONE);
                 }
Index: app/src/main/java/com/example/partyplanner/ItemTouchHelperCall.java
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/ItemTouchHelperCall.java b/app/src/main/java/com/example/partyplanner/ItemTouchHelperCall.java
deleted file mode 100644
--- a/app/src/main/java/com/example/partyplanner/ItemTouchHelperCall.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ /dev/null	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
@@ -1,79 +0,0 @@
-package com.example.partyplanner;
-
-import android.graphics.Canvas;
-import android.view.View;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.recyclerview.widget.ItemTouchHelper;
-import androidx.recyclerview.widget.RecyclerView;
-
-public class ItemTouchHelperCall extends androidx.recyclerview.widget.ItemTouchHelper.Callback {
-    ItemTouch itemTouch;
-
-    public ItemTouchHelperCall(ItemTouch itemTouch) {
-        this.itemTouch = itemTouch;
-    }
-
-    @Override
-    public boolean isLongPressDragEnabled() {
-        return true;
-    }
-
-    @Override
-    public boolean isItemViewSwipeEnabled() {
-        return true;
-    }
-
-    @Override
-    public int getMovementFlags(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder) {
-        int drag = ItemTouchHelper.UP | ItemTouchHelper.DOWN;
-        int swipe = ItemTouchHelper.START | ItemTouchHelper.END;
-        return makeMovementFlags(drag, swipe);
-    }
-
-    @Override
-    public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
-        itemTouch.moveOnHold(viewHolder.getAdapterPosition(), target.getAdapterPosition());
-        return true;
-    }
-
-    @Override
-    public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
-        itemTouch.onSwiped(viewHolder, viewHolder.getAdapterPosition());
-    }
-
-    @Override
-    public void onChildDraw(@NonNull Canvas c, @NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, float dX, float dY, int actionState, boolean isCurrentlyActive) {
-        if (actionState == ItemTouchHelper.ACTION_STATE_DRAG) {
-            super.onChildDraw(c, recyclerView, viewHolder, dX, dY, actionState, isCurrentlyActive);
-        } else {
-            View view = ((RecyclerFoodAdapter.MyViewHolder)viewHolder).eachItemBox;
-            getDefaultUIUtil().onDrawOver(c, recyclerView, view, dX,dY,actionState,isCurrentlyActive);
-        }
-    }
-
-    @Override
-    public void onChildDrawOver(@NonNull Canvas c, @NonNull RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, float dX, float dY, int actionState, boolean isCurrentlyActive) {
-        if (actionState!= ItemTouchHelper.ACTION_STATE_DRAG) {
-            View view = ((RecyclerFoodAdapter.MyViewHolder)viewHolder).eachItemBox;
-            getDefaultUIUtil().onDraw(c, recyclerView, view, dX,dY,actionState,isCurrentlyActive);
-        }
-    }
-
-    @Override
-    public void clearView(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder) {
-        View view = ((RecyclerFoodAdapter.MyViewHolder)viewHolder).eachItemBox;
-
-    }
-
-    @Override
-    public void onSelectedChanged(@Nullable RecyclerView.ViewHolder viewHolder, int actionState) {
-        super.onSelectedChanged(viewHolder, actionState);
-    }
-
-    @Override
-    public int convertToAbsoluteDirection(int flags, int layoutDirection) {
-        return super.convertToAbsoluteDirection(flags, layoutDirection);
-    }
-}
Index: app/src/main/java/com/example/partyplanner/ItemTouch.java
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/ItemTouch.java b/app/src/main/java/com/example/partyplanner/ItemTouch.java
deleted file mode 100644
--- a/app/src/main/java/com/example/partyplanner/ItemTouch.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ /dev/null	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
@@ -1,10 +0,0 @@
-package com.example.partyplanner;
-
-import androidx.recyclerview.widget.RecyclerView;
-
-public interface ItemTouch {
-
-    void moveOnHold(int oldPosition, int newPosition);
-
-    void onSwiped(RecyclerView.ViewHolder viewHolder, int position);
-}
Index: app/src/main/java/com/example/partyplanner/FirstFragment.java
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/FirstFragment.java b/app/src/main/java/com/example/partyplanner/FirstFragment.java
deleted file mode 100644
--- a/app/src/main/java/com/example/partyplanner/FirstFragment.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ /dev/null	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
@@ -1,197 +0,0 @@
-package com.example.partyplanner;
-
-import android.content.Context;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.text.InputType;
-import android.util.Patterns;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.ItemTouchHelper;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
-import com.google.firebase.database.ChildEventListener;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-
-import java.util.ArrayList;
-
-
-public class FirstFragment extends Fragment {
-    private final ArrayList<RequestListItem> linkItemCardArrayList = new ArrayList<>();
-    private RecyclerView linkCollectorRecyclerView;
-    private RequestViewAdapter itemviewAdapter;
-
-    private static final String BACKUP_KEY_INSTANCE = "BACKUP_KEY_INSTANCE";
-    private static final String SIZE_OF_LINK_COLLECTOR = "SIZE_OF_LINK_COLLECTOR";
-
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        ViewGroup viewGroup = (ViewGroup) inflater.inflate(R.layout.fragment_first, container, false);
-        linkCollectorRecyclerView = (RecyclerView) viewGroup.findViewById(R.id.links_view);
-        init(savedInstanceState, viewGroup);
-        ItemTouchHelper itemTouchHelper = new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {
-            @Override
-            public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
-                return false;
-            }
-
-            // Deletes items on swiping.
-            @Override
-            public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
-                return;
-
-            }
-        });
-        itemTouchHelper.attachToRecyclerView(linkCollectorRecyclerView);
-        return viewGroup;
-    }
-
-
-//    @Override
-//    protected void onCreate(Bundle savedInstanceState) {
-//        super.onCreate(savedInstanceState);
-//
-//        init(savedInstanceState);
-//
-//        //Specify what action a specific gesture performs, in this case swiping right or left deletes the entry
-//        ItemTouchHelperCall itemTouchHelper = new ItemTouchHelperCall(new ItemTouchHelperCall.SimpleCallback(0, ItemTouchHelperCall.LEFT | ItemTouchHelperCall.RIGHT) {
-//            @Override
-//            public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
-//                return false;
-//            }
-//
-//            // Deletes items on swiping.
-//            @Override
-//            public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {
-//                int position = viewHolder.getLayoutPosition();
-//                linkItemCardArrayList.remove(position);
-//                itemviewAdapter.notifyItemRemoved(position);
-//                Snackbar mySnackbar = Snackbar.make(findViewById(R.id.myConstraintLayout), "Link Removed", Snackbar.LENGTH_SHORT);
-//                mySnackbar.show();
-//
-//            }
-//        });
-//        itemTouchHelper.attachToRecyclerView(linkCollectorRecyclerView);
-//    }
-
-
-    // Handling Orientation Changes on Android
-//    @Override
-//    protected void onSaveInstanceState(@NonNull Bundle outState) {
-//        int size = linkItemCardArrayList == null ? 0 : linkItemCardArrayList.size();
-//        outState.putInt(SIZE_OF_LINK_COLLECTOR, size);
-//
-//        for (int i = 0; i < size; i++) {
-//            // put itemName information into instance
-//            outState.putString(BACKUP_KEY_INSTANCE + i + "1" , linkItemCardArrayList.get(i).getItemName());
-//            // put itemUrl information into instance
-//            outState.putString(BACKUP_KEY_INSTANCE + i + "2" , linkItemCardArrayList.get(i).getItemUrl());
-//        }
-//        super.onSaveInstanceState(outState);
-//
-//    }
-
-    private void init(Bundle savedInstanceState, ViewGroup container) {
-        initialItemData(savedInstanceState);
-        createRecyclerView(container);
-    }
-
-    private void initialItemData(Bundle savedInstanceState) {
-        // If Opening activity is not for the first time.
-//        if (savedInstanceState != null && savedInstanceState.containsKey(SIZE_OF_LINK_COLLECTOR)) {
-//            if (linkItemCardArrayList == null || linkItemCardArrayList.size() == 0) {
-//                int size = savedInstanceState.getInt(SIZE_OF_LINK_COLLECTOR);
-//                // Retrieve keys we stored in the instance
-//                for (int i = 0; i < size; i++) {
-//                    String itemName = savedInstanceState.getString(BACKUP_KEY_INSTANCE + i + "1");
-//                    String itemUrl = savedInstanceState.getString(BACKUP_KEY_INSTANCE + i + "2" );
-//                    LinkItemCard itemCard = new LinkItemCard(itemName, itemUrl);
-//                    linkItemCardArrayList.add(itemCard);
-//                }
-//            }
-//        }
-        FirebaseAuth authentication = FirebaseAuth.getInstance();
-        FirebaseUser firebaseUser = authentication.getCurrentUser();
-        DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child("Users");
-        reference.addChildEventListener(new ChildEventListener() {
-            @Override
-            public void onChildAdded(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {
-                String name = snapshot.child("username").getValue().toString();
-                //ArrayList<String> friendsList = snapshot.child("friends").getValue();
-
-                if (!name.equals(firebaseUser.toString())) {
-                    RequestListItem itemCard = new RequestListItem(name);
-                    linkItemCardArrayList.add(itemCard);
-                    itemviewAdapter.notifyItemInserted(0);
-                }
-
-            }
-
-            @Override
-            public void onChildChanged(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {
-
-            }
-
-            @Override
-            public void onChildRemoved(@NonNull DataSnapshot snapshot) {
-
-            }
-
-            @Override
-            public void onChildMoved(@NonNull DataSnapshot snapshot, @Nullable String previousChildName) {
-
-            }
-
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
-
-            }
-        });
-
-    }
-
-    private void createRecyclerView(ViewGroup container) {
-        RecyclerView.LayoutManager rLayoutManger = new LinearLayoutManager(container.getContext());
-
-        linkCollectorRecyclerView.setHasFixedSize(true);
-        itemviewAdapter = new RequestViewAdapter(linkItemCardArrayList);
-        RequestItemListener itemClickListener = new RequestItemListener() {
-            @Override
-            public void onRequestItemClick(int position, String userName, Context context) {
-                linkItemCardArrayList.get(position).onRequestItemClick(position, userName, context);
-                itemviewAdapter.notifyItemChanged(position);
-            }
-        };
-        itemviewAdapter.setOnItemClickListener(itemClickListener);
-        linkCollectorRecyclerView.setAdapter(itemviewAdapter);
-        linkCollectorRecyclerView.setLayoutManager(rLayoutManger);
-    }
-
-//    private void addItemToCollector(int position, String item_name, String item_url) {
-//
-//        if (!Patterns.WEB_URL.matcher(item_url).matches()) {
-//            Snackbar mySnackbar = Snackbar.make(findViewById(R.id.myConstraintLayout), "Invalid URL Format", Snackbar.LENGTH_SHORT);
-//            mySnackbar.show();
-//        }
-//        else {
-//            linkItemCardArrayList.add(position, new LinkItemCard(item_name, item_url));
-//            itemviewAdapter.notifyItemInserted(position);
-//            Snackbar mySnackbar = Snackbar.make(findViewById(R.id.myConstraintLayout), "Link Added Successfully", Snackbar.LENGTH_SHORT);
-//            mySnackbar.show();
-//        }
-//    }
-}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'com.android.application'\n    id 'com.google.gms.google-services'\n}\n\nconfigurations {\n    compile.exclude group: 'com.google.zxing'\n}\n\nandroid {\n    compileSdk 32\n\n    defaultConfig {\n        applicationId \"com.example.partyplanner\"\n        minSdk 26\n        targetSdk 32\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\n\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    implementation 'androidx.appcompat:appcompat:1.4.1'\n    implementation 'com.google.android.material:material:1.6.0-beta01'\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\n    implementation 'com.google.firebase:firebase-database:20.0.4'\n    implementation 'com.google.firebase:firebase-core:20.1.2'\n    implementation 'com.google.firebase:firebase-auth:21.0.3'\n    implementation 'com.google.firebase:firebase-storage:20.0.1'\n    implementation 'com.github.Drjacky:ImagePicker:1.8.4'\n    implementation 'com.github.MikeOrtiz:TouchImageView:1.4.1'\n    implementation 'com.squareup.picasso:picasso:2.5.2'\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n    testImplementation 'junit:junit:4.13.2'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n    implementation 'com.firebaseui:firebase-ui:0.6.0'\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/build.gradle	(date 1650759856918)
@@ -35,7 +35,7 @@
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
     implementation 'androidx.appcompat:appcompat:1.4.1'
-    implementation 'com.google.android.material:material:1.6.0-beta01'
+    implementation 'com.google.android.material:material:1.7.0-alpha01'
     implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
     implementation 'com.google.firebase:firebase-database:20.0.4'
     implementation 'com.google.firebase:firebase-core:20.1.2'
@@ -45,6 +45,7 @@
     implementation 'com.github.MikeOrtiz:TouchImageView:1.4.1'
     implementation 'com.squareup.picasso:picasso:2.5.2'
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
+    implementation 'com.google.android.gms:play-services-places:17.0.0'
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
Index: app/src/main/res/layout/activity_event_invite.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_event_invite.xml b/app/src/main/res/layout/activity_event_invite.xml
new file mode 100644
--- /dev/null	(date 1651466313602)
+++ b/app/src/main/res/layout/activity_event_invite.xml	(date 1651466313602)
@@ -0,0 +1,151 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/eventBackground"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="250dp"
+                android:layout_marginLeft="16dp"
+                android:layout_marginRight="16dp"
+                android:orientation="vertical">
+                <com.google.android.material.textfield.TextInputLayout
+                    android:id="@+id/eventNameHolder"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:ems="10"
+                    android:textColorHint="#666666"
+                    app:boxStrokeWidth="0dp"
+                    app:boxStrokeWidthFocused="0dp"
+                    app:endIconMode="clear_text"
+                    app:endIconTint="#A846F4">
+
+                    <com.google.android.material.textfield.TextInputEditText
+                        android:id="@+id/eventName"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:autofillHints=""
+                        android:background="@drawable/edittext_back"
+                        android:ems="10"
+                        android:hint="Event Name"
+                        android:inputType="textCapWords"
+                        android:textColor="@color/black" />
+                </com.google.android.material.textfield.TextInputLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:orientation="horizontal"
+                    android:weightSum="2">
+                    <com.google.android.material.textfield.TextInputLayout
+                        android:id="@+id/dateHolder"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:ems="10"
+                        android:layout_weight="1"
+                        android:textColorHint="#666666"
+                        app:boxStrokeWidth="0dp"
+                        app:boxStrokeWidthFocused="0dp"
+                        android:layout_marginTop="16dp"
+                        android:layout_marginRight="6dp"
+                        app:endIconMode="clear_text"
+                        app:endIconTint="#A846F4">
+
+                        <com.google.android.material.textfield.TextInputEditText
+                            android:id="@+id/date"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:autofillHints=""
+                            android:background="@drawable/edittext_back"
+                            android:ems="10"
+                            android:hint="Date"
+                            android:inputType="date"
+                            android:textColor="@color/black" />
+                    </com.google.android.material.textfield.TextInputLayout>
+                    <Button
+                        android:id="@+id/dateButton"
+                        android:layout_width="match_parent"
+                        android:layout_height="65dp"
+                        android:layout_weight="1"
+                        android:layout_marginTop="8dp"
+                        android:layout_marginStart="6dp"
+                        android:text="Pick Date"/>
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:orientation="horizontal"
+                    android:weightSum="2">
+                    <com.google.android.material.textfield.TextInputLayout
+                        android:id="@+id/timeHolder"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:ems="10"
+                        android:layout_weight="1"
+                        android:textColorHint="#666666"
+                        app:boxStrokeWidth="0dp"
+                        app:boxStrokeWidthFocused="0dp"
+                        android:layout_marginTop="16dp"
+                        android:layout_marginRight="6dp"
+                        app:endIconMode="clear_text"
+                        app:endIconTint="#A846F4">
+
+                        <com.google.android.material.textfield.TextInputEditText
+                            android:id="@+id/time"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:autofillHints=""
+                            android:background="@drawable/edittext_back"
+                            android:ems="10"
+                            android:hint="Time"
+                            android:inputType="date"
+                            android:textColor="@color/black" />
+                    </com.google.android.material.textfield.TextInputLayout>
+                    <Button
+                        android:id="@+id/timeButton"
+                        android:layout_width="match_parent"
+                        android:layout_height="65dp"
+                        android:layout_weight="1"
+                        android:layout_marginTop="8dp"
+                        android:layout_marginStart="6dp"
+                        android:text="Pick Time"/>
+                </LinearLayout>
+
+                <TextView
+                    android:id="@+id/addressDisplay"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_marginTop="16dp"
+                    android:textSize="20sp"
+                    android:textAlignment="center"
+                    android:textStyle="bold"
+                    android:text="Venue has not been decided"/>
+                <Button
+                    android:id="@+id/addressButton"
+                    android:layout_width="match_parent"
+                    android:layout_height="65dp"
+                    android:layout_marginTop="16dp"
+                    android:text="Select location"/>
+
+                <Button
+                    android:id="@+id/createEvent"
+                    android:layout_width="wrap_content"
+                    android:layout_gravity="center"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="48dp"
+                    android:text="Create Event"/>
+            </LinearLayout>
+        </RelativeLayout>
+    </ScrollView>
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/Event.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/Event.java b/app/src/main/java/com/example/partyplanner/Event.java
new file mode 100644
--- /dev/null	(date 1651459200751)
+++ b/app/src/main/java/com/example/partyplanner/Event.java	(date 1651459200751)
@@ -0,0 +1,25 @@
+package com.example.partyplanner;
+
+import java.util.List;
+
+public class Event {
+    public String cardID;
+    public String host;
+    public List<String> invitees;
+    public String name;
+    public String time;
+    public String venue;
+
+    public Event() {
+
+    }
+
+    public Event(String cardID, String host, List<String> invitees, String name, String time, String venue) {
+        this.cardID = cardID;
+        this.host = host;
+        this.invitees = invitees;
+        this.name = name;
+        this.time = time;
+        this.venue = venue;
+    }
+}
Index: app/src/main/res/layout/activity_viewprofile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_viewprofile.xml b/app/src/main/res/layout/activity_viewprofile.xml
new file mode 100644
--- /dev/null	(date 1650676793039)
+++ b/app/src/main/res/layout/activity_viewprofile.xml	(date 1650676793039)
@@ -0,0 +1,328 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".ViewProfile">
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="350dp"
+                android:background="@drawable/accountbackground"
+                android:orientation="vertical">
+
+                <androidx.cardview.widget.CardView
+                    android:layout_width="150dp"
+                    android:layout_height="150dp"
+                    android:layout_gravity="center_horizontal"
+                    android:layout_marginTop="50dp"
+                    app:cardCornerRadius="100dp">
+
+                    <ImageView
+                        android:id="@+id/profilePictureView"
+                        android:layout_width="150dp"
+                        android:layout_height="150dp"
+                        android:contentDescription="@string/profile_picture"
+                        android:scaleType="centerCrop"
+                        android:src="@drawable/user" />
+                </androidx.cardview.widget.CardView>
+
+                <TextView
+                    android:id="@+id/accountNameView"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center_horizontal"
+                    android:layout_marginTop="10dp"
+                    android:text="@string/name"
+                    android:textColor="@color/white"
+                    android:textSize="25sp"
+                    android:textStyle="bold" />
+            </LinearLayout>
+
+            <androidx.cardview.widget.CardView
+                android:layout_width="match_parent"
+                android:layout_height="120dp"
+                android:layout_centerHorizontal="true"
+                android:layout_marginStart="35dp"
+                android:layout_marginTop="290dp"
+                android:layout_marginEnd="35dp"
+                app:cardCornerRadius="15dp"
+                app:cardUseCompatPadding="true">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:layout_width="match_parent"
+                        android:layout_height="30dp"
+                        android:gravity="center"
+                        android:text="@string/events"
+                        android:textColor="#A846F4"
+                        android:textSize="24sp"
+                        android:textStyle="bold" />
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:baselineAligned="false"
+                        android:orientation="horizontal"
+                        android:weightSum="3">
+
+                        <LinearLayout
+                            android:layout_width="0dp"
+                            android:layout_height="match_parent"
+                            android:layout_weight="1.49"
+                            android:gravity="center"
+                            android:orientation="vertical">
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="@string/hosted"
+                                android:textSize="20sp"
+                                android:textStyle="bold" />
+
+                            <View
+                                android:layout_width="match_parent"
+                                android:layout_height=".5dp"
+                                android:layout_marginStart="20dp"
+                                android:layout_marginTop="5dp"
+                                android:layout_marginEnd="20dp"
+                                android:background="#666666" />
+
+                            <TextView
+                                android:id="@+id/eventConductedCountView"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:paddingTop="5dp"
+                                android:text="@string/_12"
+                                android:textColor="#A846F4"
+                                android:textSize="20sp"
+                                android:textStyle="bold" />
+                        </LinearLayout>
+
+                        <LinearLayout
+                            android:layout_width="1dp"
+                            android:layout_height="match_parent"
+                            android:layout_weight=".02"
+                            android:gravity="center"
+                            android:orientation="vertical">
+
+                            <View
+                                android:layout_width="1dp"
+                                android:layout_height="match_parent"
+                                android:layout_marginTop="8dp"
+                                android:layout_marginBottom="8dp"
+                                android:background="#666666" />
+                        </LinearLayout>
+
+                        <LinearLayout
+                            android:layout_width="0dp"
+                            android:layout_height="match_parent"
+                            android:layout_weight="1.49"
+                            android:gravity="center"
+                            android:orientation="vertical">
+
+                            <TextView
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:text="@string/attended"
+                                android:textSize="20sp"
+                                android:textStyle="bold" />
+
+                            <View
+                                android:layout_width="match_parent"
+                                android:layout_height=".5dp"
+                                android:layout_marginStart="20dp"
+                                android:layout_marginTop="5dp"
+                                android:layout_marginEnd="20dp"
+                                android:background="#666666" />
+
+                            <TextView
+                                android:id="@+id/eventAttendedCountView"
+                                android:layout_width="wrap_content"
+                                android:layout_height="wrap_content"
+                                android:paddingTop="5dp"
+                                android:text="@string/_12"
+                                android:textColor="#A846F4"
+                                android:textSize="20sp"
+                                android:textStyle="bold" />
+                        </LinearLayout>
+                    </LinearLayout>
+                </LinearLayout>
+            </androidx.cardview.widget.CardView>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="432dp"
+                android:orientation="vertical">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginStart="32dp"
+                    android:layout_marginEnd="32dp"
+                    android:orientation="horizontal"
+                    tools:ignore="UseCompoundDrawables">
+
+                    <ImageView
+                        android:layout_width="36dp"
+                        android:layout_height="36dp"
+                        android:contentDescription="@string/email_address"
+                        android:src="@drawable/email" />
+
+                    <TextView
+                        android:id="@+id/emailView"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center_vertical"
+                        android:paddingStart="15dp"
+                        android:text="@string/email_address"
+                        android:textSize="15sp"
+                        android:textStyle="bold"
+                        tools:ignore="RtlSymmetry" />
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginStart="32dp"
+                    android:layout_marginTop="24dp"
+                    android:layout_marginEnd="32dp"
+                    android:orientation="horizontal"
+                    tools:ignore="UseCompoundDrawables">
+
+                    <ImageView
+                        android:layout_width="36dp"
+                        android:layout_height="36dp"
+                        android:contentDescription="@string/phone_number"
+                        android:src="@drawable/phone" />
+
+                    <TextView
+                        android:id="@+id/phoneNumberView"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="center_vertical"
+                        android:paddingStart="15dp"
+                        android:text="@string/phone_number"
+                        android:textSize="15sp"
+                        android:textStyle="bold"
+                        tools:ignore="RtlSymmetry" />
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginStart="32dp"
+                    android:layout_marginTop="24dp"
+                    android:layout_marginEnd="32dp"
+                    android:orientation="horizontal">
+
+                    <ImageView
+                        android:layout_width="36dp"
+                        android:layout_height="36dp"
+                        android:contentDescription="@string/address"
+                        android:src="@drawable/address" />
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="vertical"
+                        android:paddingStart="15dp"
+                        tools:ignore="RtlSymmetry">
+
+                        <TextView
+                            android:id="@+id/addressLine1View"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_gravity="center_vertical"
+                            android:layout_marginTop="6dp"
+                            android:hint="@string/street_and_unit"
+                            android:text="@string/street_and_unit"
+                            android:textSize="15sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/addressLine2View"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_gravity="center_vertical"
+                            android:layout_marginTop="6dp"
+                            android:hint="@string/city_and_state"
+                            android:text="@string/city_and_state"
+                            android:textSize="15sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/addressLine3View"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_gravity="center_vertical"
+                            android:layout_marginTop="6dp"
+                            android:hint="@string/pincode"
+                            android:text="@string/pincode"
+                            android:textSize="15sp"
+                            android:textStyle="bold" />
+                    </LinearLayout>
+                </LinearLayout>
+
+                <androidx.cardview.widget.CardView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center"
+                    android:layout_marginStart="12dp"
+                    android:layout_marginTop="20dp"
+                    android:layout_marginEnd="12dp"
+                    app:cardCornerRadius="15dp"
+                    app:cardUseCompatPadding="true">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:orientation="vertical">
+
+                        <TextView
+                            android:id="@+id/preferencesView"
+                            android:layout_width="match_parent"
+                            android:layout_height="40dp"
+                            android:gravity="center"
+                            android:paddingStart="20dp"
+                            android:text="@string/preferences"
+                            android:textColor="#A846F4"
+                            android:textSize="24sp"
+                            android:textStyle="bold"
+                            app:drawableRightCompat="@drawable/click"
+                            tools:ignore="RtlSymmetry" />
+                    </LinearLayout>
+                </androidx.cardview.widget.CardView>
+            </LinearLayout>
+        </RelativeLayout>
+    </ScrollView>
+
+    <ProgressBar
+        android:id="@+id/progressbarProfileView"
+        style="?android:attr/progressBarStyleLarge"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:indeterminate="true"
+        android:indeterminateTint="#A846F4"
+        android:indeterminateTintMode="src_atop"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/EventInvite.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/EventInvite.java b/app/src/main/java/com/example/partyplanner/EventInvite.java
new file mode 100644
--- /dev/null	(date 1651498667856)
+++ b/app/src/main/java/com/example/partyplanner/EventInvite.java	(date 1651498667856)
@@ -0,0 +1,184 @@
+package com.example.partyplanner;
+
+import android.app.DatePickerDialog;
+import android.app.TimePickerDialog;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.constraintlayout.widget.ConstraintLayout;
+
+import com.google.android.material.textfield.TextInputEditText;
+import com.google.android.material.textfield.TextInputLayout;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.List;
+
+public class EventInvite extends AppCompatActivity {
+
+    TextView addressDisplay;
+    List<String> invitees;
+    long eventCount;
+    String cardID;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        getSupportActionBar().hide();
+        setContentView(R.layout.activity_event_invite);
+
+        Intent i = getIntent();
+        String eventType = i.getStringExtra("event");
+        String invitationCard = i.getStringExtra("backgroundImage");
+
+        FirebaseAuth authentication = FirebaseAuth.getInstance();
+        FirebaseUser firebaseUser = authentication.getCurrentUser();
+
+        ConstraintLayout constraintLayout = findViewById(R.id.eventBackground);
+
+        if (eventType.equals("birthday") && invitationCard.equals("1")) {
+            constraintLayout.setBackgroundResource(R.drawable.birthday1);
+            cardID = "b1";
+        } else if (eventType.equals("birthday") && invitationCard.equals("2")) {
+            constraintLayout.setBackgroundResource(R.drawable.birthday2);
+            cardID = "b2";
+        } else if (eventType.equals("wedding") && invitationCard.equals("1")) {
+            constraintLayout.setBackgroundResource(R.drawable.wedding1);
+            cardID = "w1";
+        } else if (eventType.equals("wedding") && invitationCard.equals("2")) {
+            constraintLayout.setBackgroundResource(R.drawable.wedding2);
+            cardID = "w2";
+        } else if (eventType.equals("pizza") && invitationCard.equals("1")) {
+            constraintLayout.setBackgroundResource(R.drawable.pizza1);
+            cardID = "p1";
+        } else if (eventType.equals("pizza") && invitationCard.equals("2")) {
+            constraintLayout.setBackgroundResource(R.drawable.pizza2);
+            cardID = "p2";
+        } else if (eventType.equals("christmas") && invitationCard.equals("1")) {
+            constraintLayout.setBackgroundResource(R.drawable.christmas1);
+            cardID = "c1";
+        } else if (eventType.equals("christmas") && invitationCard.equals("2")) {
+            constraintLayout.setBackgroundResource(R.drawable.christmas2);
+            cardID = "c2";
+        } else if (eventType.equals("halloween") && invitationCard.equals("1")) {
+            constraintLayout.setBackgroundResource(R.drawable.halloween1);
+            cardID = "h1";
+        } else if (eventType.equals("halloween") && invitationCard.equals("2")) {
+            constraintLayout.setBackgroundResource(R.drawable.halloween2);
+            cardID = "h2";
+        } else if (eventType.equals("dance") && invitationCard.equals("1")) {
+            constraintLayout.setBackgroundResource(R.drawable.dance1);
+            cardID = "d1";
+        } else if (eventType.equals("dance") && invitationCard.equals("2")) {
+            constraintLayout.setBackgroundResource(R.drawable.dance2);
+            cardID = "d2";
+        }
+
+        TextInputLayout eventNameHolder = findViewById(R.id.eventNameHolder);
+        TextInputLayout dateHolder = findViewById(R.id.dateHolder);
+        TextInputEditText datePick = findViewById(R.id.date);
+        TextInputLayout timeHolder = findViewById(R.id.timeHolder);
+        TextInputEditText timePick = findViewById(R.id.time);
+        Button dateButton = findViewById(R.id.dateButton);
+        Button timeButton = findViewById(R.id.timeButton);
+        addressDisplay = findViewById(R.id.addressDisplay);
+        Button addressButton = findViewById(R.id.addressButton);
+        Button createEvent = findViewById(R.id.createEvent);
+        invitees = new ArrayList<>();
+
+        Calendar calendar = Calendar.getInstance();
+
+        int year = calendar.get(Calendar.YEAR);
+        int month = calendar.get(Calendar.MONTH);
+        int date = calendar.get(Calendar.DATE);
+
+        int hour = calendar.get(Calendar.HOUR_OF_DAY);
+        int minute = calendar.get(Calendar.MINUTE);
+
+        DatabaseReference reference = FirebaseDatabase.getInstance().getReference("Events");
+
+        reference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                if (snapshot.exists()) {
+                    eventCount = snapshot.getChildrenCount();
+                }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+
+            }
+        });
+
+        createEvent.setOnClickListener(view -> {
+            if (eventNameHolder.getEditText().getText().toString().isEmpty()) {
+                eventNameHolder.setError("Event name is required!");
+                eventNameHolder.requestFocus();
+                return;
+            } else {
+                eventNameHolder.setError(null);
+            }
+            if (dateHolder.getEditText().getText().toString().isEmpty()) {
+                dateHolder.setError("Date is required!");
+                dateHolder.requestFocus();
+                return;
+            } else {
+                dateHolder.setError(null);
+            }
+            if (timeHolder.getEditText().getText().toString().isEmpty()) {
+                timeHolder.setError("Time is required!");
+                timeHolder.requestFocus();
+                return;
+            } else {
+                timeHolder.setError(null);
+            }
+
+            invitees.add("sushithreddy21@gmail.com");
+            if (firebaseUser != null) {
+                Event event = new Event(cardID, firebaseUser.getEmail(), invitees, eventNameHolder.getEditText().getText().toString().trim(), dateHolder.getEditText().getText().toString().trim() + " " + timeHolder.getEditText().getText().toString().trim(), addressDisplay.getText().toString().trim());
+                reference.child(String.valueOf(eventCount + 1)).setValue(event).addOnCompleteListener(task -> {
+                    if (task.isSuccessful()) {
+                        Toast.makeText(EventInvite.this, "Event has been created", Toast.LENGTH_LONG).show();
+                        Intent intent = new Intent(EventInvite.this, EventActivity.class);
+                        finish();
+                        startActivity(intent);
+                    }
+                });
+            }
+        });
+
+        dateButton.setOnClickListener(view -> {
+            DatePickerDialog datePickerDialog = new DatePickerDialog(this, (datePicker, year1, month1, date1) -> {
+                String dateString = month1 + "/" + date1 + "/" + year1;
+                datePick.setText(dateString);
+            }, year, month, date);
+            datePickerDialog.show();
+        });
+
+        timeButton.setOnClickListener(view -> {
+            TimePickerDialog timePickerDialog = new TimePickerDialog(this, (timePicker, hour1, minute1) -> {
+                String timeString = "at " + hour1 + ":" + minute1;
+                timePick.setText(timeString);
+            }, hour, minute, true);
+            timePickerDialog.show();
+        });
+
+        addressButton.setOnClickListener(view -> {
+
+        });
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/RecyclerFoodAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.annotation.SuppressLint;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.List;\n\npublic class RecyclerFoodAdapter extends RecyclerView.Adapter<RecyclerFoodAdapter.MyViewHolder> {\n\n    Context context;\n    List<String> foods;\n\n    public RecyclerFoodAdapter(Context context, List<String> foods) {\n        this.context = context;\n        this.foods = foods;\n    }\n\n    @NonNull\n    @Override\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(context).inflate(R.layout.item, parent, false);\n        return new MyViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull MyViewHolder holder, @SuppressLint(\"RecyclerView\") int position) {\n        holder.foodItem.setText(foods.get(position));\n\n        holder.eachItemBox.setOnClickListener(view -> {\n            Dialog d = new Dialog(context);\n            d.setContentView(R.layout.activity_add);\n            TextView title = d.findViewById(R.id.textView6);\n            EditText food = d.findViewById(R.id.item);\n            Button addFood = d.findViewById(R.id.buttonAdd);\n            Button cancelFood = d.findViewById(R.id.buttonCancel);\n            title.setText(\"Update Food\");\n            addFood.setText(\"Update\");\n            food.setText(foods.get(position));\n            String prev = food.getText().toString().trim();\n            addFood.setOnClickListener(view1 -> {\n                String itemName = food.getText().toString().trim();\n                if (food.getText().toString().equals(\"\")) {\n                    Toast.makeText(context, \"Enter details\"\n                            , Toast.LENGTH_SHORT).show();\n                } else {\n                    FirebaseAuth authentication = FirebaseAuth.getInstance();\n                    FirebaseUser firebaseUser = authentication.getCurrentUser();\n                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child(\"Users\");\n                    String userId = firebaseUser.getUid();\n                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                        @Override\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\n                            User user = snapshot.getValue(User.class);\n                            List<List<String>> completePref = user.preferences;\n                            completePref.get(0).remove(position);\n                            completePref.get(0).add(itemName);\n                            snapshot.getRef().child(\"preferences\").setValue(completePref);\n                            foods = user.preferences.get(0);\n                            notifyItemChanged(position);\n                            d.dismiss();\n                            Toast.makeText(context, prev + \" has been updated!\", Toast.LENGTH_LONG).show();\n                        }\n\n                        @Override\n                        public void onCancelled(@NonNull DatabaseError error) {\n\n                        }\n                    });\n                }\n            });\n            cancelFood.setOnClickListener(view1 -> d.dismiss());\n            d.show();\n        });\n    }\n\n    @Override\n    public int getItemCount() {\n        return foods.size();\n    }\n\n    public void undo(String item, int position) {\n        foods.add(position, item);\n        notifyItemInserted(position);\n    }\n\n    public static class MyViewHolder extends RecyclerView.ViewHolder {\n\n        TextView foodItem;\n        LinearLayout eachItemBox;\n\n        public MyViewHolder(@NonNull View itemView) {\n            super(itemView);\n\n            foodItem = itemView.findViewById(R.id.eachItem);\n            eachItemBox = itemView.findViewById(R.id.eachItemBox);\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/RecyclerFoodAdapter.java b/app/src/main/java/com/example/partyplanner/RecyclerFoodAdapter.java
--- a/app/src/main/java/com/example/partyplanner/RecyclerFoodAdapter.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/RecyclerFoodAdapter.java	(date 1650676793060)
@@ -66,26 +66,34 @@
                     FirebaseAuth authentication = FirebaseAuth.getInstance();
                     FirebaseUser firebaseUser = authentication.getCurrentUser();
                     DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child("Users");
-                    String userId = firebaseUser.getUid();
-                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                        @Override
-                        public void onDataChange(@NonNull DataSnapshot snapshot) {
-                            User user = snapshot.getValue(User.class);
-                            List<List<String>> completePref = user.preferences;
-                            completePref.get(0).remove(position);
-                            completePref.get(0).add(itemName);
-                            snapshot.getRef().child("preferences").setValue(completePref);
-                            foods = user.preferences.get(0);
-                            notifyItemChanged(position);
-                            d.dismiss();
-                            Toast.makeText(context, prev + " has been updated!", Toast.LENGTH_LONG).show();
-                        }
+                    if (firebaseUser != null) {
+                        String userId = firebaseUser.getUid();
+                        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                User user = snapshot.getValue(User.class);
+                                if (user != null) {
+                                    List<List<String>> completePref = user.preferences;
+                                    completePref.get(0).remove(position);
+                                    completePref.get(0).add(itemName);
+                                    snapshot.getRef().child("preferences").setValue(completePref);
+                                    foods = user.preferences.get(0);
+                                    notifyItemChanged(position);
+                                    d.dismiss();
+                                    Toast.makeText(context, prev + " has been updated!", Toast.LENGTH_LONG).show();
+                                } else {
+                                    Toast.makeText(context, "User not found!!", Toast.LENGTH_LONG).show();
+                                }
+                            }
 
-                        @Override
-                        public void onCancelled(@NonNull DatabaseError error) {
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
 
-                        }
-                    });
+                            }
+                        });
+                    } else {
+                        Toast.makeText(context, "User not found!!", Toast.LENGTH_LONG).show();
+                    }
                 }
             });
             cancelFood.setOnClickListener(view1 -> d.dismiss());
Index: app/src/main/java/com/example/partyplanner/EventActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/EventActivity.java b/app/src/main/java/com/example/partyplanner/EventActivity.java
new file mode 100644
--- /dev/null	(date 1651466313564)
+++ b/app/src/main/java/com/example/partyplanner/EventActivity.java	(date 1651466313564)
@@ -0,0 +1,77 @@
+package com.example.partyplanner;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.ImageView;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.cardview.widget.CardView;
+
+public class EventActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        getSupportActionBar().hide();
+        setContentView(R.layout.activity_event);
+
+        Intent i = getIntent();
+        String selectedEvent = i.getStringExtra("event");
+
+        CardView cardView1 = findViewById(R.id.eventCardView1);
+        CardView cardView2 = findViewById(R.id.eventCardView2);
+
+        ImageView card1 = findViewById(R.id.card1);
+        ImageView card2 = findViewById(R.id.card2);
+
+        Intent sendingIntent = new Intent(EventActivity.this, EventInvite.class);
+
+        switch (selectedEvent) {
+            case "birthday":
+                card1.setImageResource(R.drawable.birthday1);
+                card2.setImageResource(R.drawable.birthday2);
+                sendingIntent.putExtra("event", "birthday");
+                break;
+            case "wedding":
+                card1.setImageResource(R.drawable.wedding1);
+                card2.setImageResource(R.drawable.wedding2);
+                sendingIntent.putExtra("event", "wedding");
+
+                break;
+            case "pizza":
+                card1.setImageResource(R.drawable.pizza1);
+                card2.setImageResource(R.drawable.pizza2);
+                sendingIntent.putExtra("event", "pizza");
+
+                break;
+            case "christmas":
+                card1.setImageResource(R.drawable.christmas1);
+                card2.setImageResource(R.drawable.christmas2);
+                sendingIntent.putExtra("event", "christmas");
+
+                break;
+            case "halloween":
+                card1.setImageResource(R.drawable.halloween1);
+                card2.setImageResource(R.drawable.halloween2);
+                sendingIntent.putExtra("event", "halloween");
+
+                break;
+            case "dance":
+                card1.setImageResource(R.drawable.dance1);
+                card2.setImageResource(R.drawable.dance2);
+                sendingIntent.putExtra("event", "dance");
+                break;
+        }
+
+        cardView1.setOnClickListener(view -> {
+            sendingIntent.putExtra("backgroundImage", "1");
+            startActivity(sendingIntent);
+        });
+
+        cardView2.setOnClickListener(view -> {
+            sendingIntent.putExtra("backgroundImage", "2");
+            startActivity(sendingIntent);
+        });
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/ViewProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/ViewProfile.java b/app/src/main/java/com/example/partyplanner/ViewProfile.java
new file mode 100644
--- /dev/null	(date 1650676793005)
+++ b/app/src/main/java/com/example/partyplanner/ViewProfile.java	(date 1650676793005)
@@ -0,0 +1,22 @@
+package com.example.partyplanner;
+
+import android.os.Bundle;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+
+public class ViewProfile extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        getSupportActionBar().hide();
+        setContentView(R.layout.activity_viewprofile);
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+
+    }
+}
Index: app/src/main/res/layout/fragment_account.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".AccountFragment\">\n\n    <ScrollView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <RelativeLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"405dp\">\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"350dp\"\n                android:background=\"@drawable/accountbackground\"\n                android:orientation=\"vertical\">\n\n                <androidx.cardview.widget.CardView\n                    android:layout_width=\"150dp\"\n                    android:layout_height=\"150dp\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:layout_marginTop=\"50dp\"\n                    app:cardCornerRadius=\"100dp\">\n\n                    <ImageView\n                        android:id=\"@+id/profilePicture\"\n                        android:layout_width=\"150dp\"\n                        android:layout_height=\"150dp\"\n                        android:contentDescription=\"@string/profile_picture\"\n                        android:scaleType=\"centerCrop\"\n                        android:src=\"@drawable/user\" />\n                </androidx.cardview.widget.CardView>\n\n                <TextView\n                    android:id=\"@+id/accountName\"\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_gravity=\"center_horizontal\"\n                    android:layout_marginTop=\"10dp\"\n                    android:text=\"@string/name\"\n                    android:textColor=\"@color/white\"\n                    android:textSize=\"25sp\"\n                    android:textStyle=\"bold\" />\n            </LinearLayout>\n\n            <androidx.cardview.widget.CardView\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"120dp\"\n                android:layout_centerHorizontal=\"true\"\n                android:layout_marginStart=\"35dp\"\n                android:layout_marginTop=\"290dp\"\n                android:layout_marginEnd=\"35dp\"\n                app:cardCornerRadius=\"15dp\"\n                app:cardUseCompatPadding=\"true\">\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    android:orientation=\"vertical\">\n\n                    <TextView\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"30dp\"\n                        android:gravity=\"center\"\n                        android:text=\"@string/events\"\n                        android:textColor=\"#A846F4\"\n                        android:textSize=\"24sp\"\n                        android:textStyle=\"bold\" />\n\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"\n                        android:baselineAligned=\"false\"\n                        android:orientation=\"horizontal\"\n                        android:weightSum=\"3\">\n\n                        <LinearLayout\n                            android:layout_width=\"0dp\"\n                            android:layout_height=\"match_parent\"\n                            android:layout_weight=\"1.49\"\n                            android:gravity=\"center\"\n                            android:orientation=\"vertical\">\n\n                            <TextView\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:text=\"@string/hosted\"\n                                android:textSize=\"20sp\"\n                                android:textStyle=\"bold\" />\n\n                            <View\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\".5dp\"\n                                android:layout_marginTop=\"5dp\"\n                                android:layout_marginStart=\"20dp\"\n                                android:layout_marginEnd=\"20dp\"\n                                android:background=\"#666666\" />\n\n                            <TextView\n                                android:id=\"@+id/eventConductedCount\"\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:paddingTop=\"5dp\"\n                                android:text=\"@string/_12\"\n                                android:textColor=\"#A846F4\"\n                                android:textSize=\"20sp\"\n                                android:textStyle=\"bold\" />\n                        </LinearLayout>\n\n                        <LinearLayout\n                            android:layout_width=\"1dp\"\n                            android:layout_height=\"match_parent\"\n                            android:layout_weight=\".02\"\n                            android:gravity=\"center\"\n                            android:orientation=\"vertical\">\n\n                            <View\n                                android:layout_width=\"1dp\"\n                                android:layout_height=\"match_parent\"\n                                android:background=\"#666666\"\n                                android:layout_marginTop=\"8dp\"\n                                android:layout_marginBottom=\"8dp\"/>\n                        </LinearLayout>\n\n                        <LinearLayout\n                            android:layout_width=\"0dp\"\n                            android:layout_height=\"match_parent\"\n                            android:layout_weight=\"1.49\"\n                            android:gravity=\"center\"\n                            android:orientation=\"vertical\">\n\n                            <TextView\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:text=\"@string/attended\"\n                                android:textSize=\"20sp\"\n                                android:textStyle=\"bold\" />\n\n                            <View\n                                android:layout_width=\"match_parent\"\n                                android:layout_height=\".5dp\"\n                                android:layout_marginTop=\"5dp\"\n                                android:layout_marginStart=\"20dp\"\n                                android:layout_marginEnd=\"20dp\"\n                                android:background=\"#666666\" />\n\n                            <TextView\n                                android:id=\"@+id/eventAttendedCount\"\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:paddingTop=\"5dp\"\n                                android:text=\"@string/_12\"\n                                android:textColor=\"#A846F4\"\n                                android:textSize=\"20sp\"\n                                android:textStyle=\"bold\" />\n                        </LinearLayout>\n                    </LinearLayout>\n                </LinearLayout>\n            </androidx.cardview.widget.CardView>\n\n            <LinearLayout\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"432dp\"\n                android:orientation=\"vertical\">\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginStart=\"32dp\"\n                    android:layout_marginEnd=\"32dp\"\n                    android:orientation=\"horizontal\"\n                    tools:ignore=\"UseCompoundDrawables\">\n\n                    <ImageView\n                        android:layout_width=\"36dp\"\n                        android:layout_height=\"36dp\"\n                        android:contentDescription=\"@string/email_address\"\n                        android:src=\"@drawable/email\" />\n\n                    <TextView\n                        android:id=\"@+id/emailAccount\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_gravity=\"center_vertical\"\n                        android:paddingStart=\"15dp\"\n                        android:text=\"@string/email_address\"\n                        android:textSize=\"15sp\"\n                        android:textStyle=\"bold\"\n                        tools:ignore=\"RtlSymmetry\" />\n                </LinearLayout>\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginStart=\"32dp\"\n                    android:layout_marginTop=\"24dp\"\n                    android:layout_marginEnd=\"32dp\"\n                    android:orientation=\"horizontal\"\n                    tools:ignore=\"UseCompoundDrawables\">\n\n                    <ImageView\n                        android:layout_width=\"36dp\"\n                        android:layout_height=\"36dp\"\n                        android:contentDescription=\"@string/phone_number\"\n                        android:src=\"@drawable/phone\" />\n\n                    <TextView\n                        android:id=\"@+id/phoneNumberAccount\"\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_gravity=\"center_vertical\"\n                        android:paddingStart=\"15dp\"\n                        android:text=\"@string/phone_number\"\n                        android:textSize=\"15sp\"\n                        android:textStyle=\"bold\"\n                        tools:ignore=\"RtlSymmetry\" />\n                </LinearLayout>\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginStart=\"32dp\"\n                    android:layout_marginTop=\"24dp\"\n                    android:layout_marginEnd=\"32dp\"\n                    android:orientation=\"horizontal\">\n\n                    <ImageView\n                        android:layout_width=\"36dp\"\n                        android:layout_height=\"36dp\"\n                        android:contentDescription=\"@string/address\"\n                        android:src=\"@drawable/address\" />\n\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"wrap_content\"\n                        android:orientation=\"vertical\"\n                        android:paddingStart=\"15dp\"\n                        tools:ignore=\"RtlSymmetry\">\n\n                        <TextView\n                            android:id=\"@+id/addressLine1Account\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_gravity=\"center_vertical\"\n                            android:layout_marginTop=\"6dp\"\n                            android:hint=\"@string/street_and_unit\"\n                            android:text=\"@string/street_and_unit\"\n                            android:textSize=\"15sp\"\n                            android:textStyle=\"bold\" />\n\n                        <TextView\n                            android:id=\"@+id/addressLine2Account\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_gravity=\"center_vertical\"\n                            android:layout_marginTop=\"6dp\"\n                            android:hint=\"@string/city_and_state\"\n                            android:text=\"@string/city_and_state\"\n                            android:textSize=\"15sp\"\n                            android:textStyle=\"bold\" />\n\n                        <TextView\n                            android:id=\"@+id/addressLine3Account\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_gravity=\"center_vertical\"\n                            android:layout_marginTop=\"6dp\"\n                            android:hint=\"@string/pincode\"\n                            android:text=\"@string/pincode\"\n                            android:textSize=\"15sp\"\n                            android:textStyle=\"bold\" />\n                    </LinearLayout>\n                </LinearLayout>\n\n                <androidx.cardview.widget.CardView\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginStart=\"12dp\"\n                    android:layout_marginTop=\"20dp\"\n                    android:layout_marginEnd=\"12dp\"\n                    android:layout_gravity=\"center\"\n                    app:cardCornerRadius=\"15dp\"\n                    app:cardUseCompatPadding=\"true\">\n\n                    <LinearLayout\n                        android:layout_width=\"match_parent\"\n                        android:layout_height=\"match_parent\"\n                        android:orientation=\"vertical\">\n\n                        <TextView\n                            android:id=\"@+id/preferencesEdit\"\n                            android:layout_width=\"match_parent\"\n                            android:layout_height=\"40dp\"\n                            android:gravity=\"center\"\n                            android:paddingStart=\"20dp\"\n                            android:text=\"@string/preferences\"\n                            android:textColor=\"#A846F4\"\n                            android:textSize=\"24sp\"\n                            android:textStyle=\"bold\"\n                            app:drawableRightCompat=\"@drawable/click\"\n                            tools:ignore=\"RtlSymmetry\" />\n                    </LinearLayout>\n                </androidx.cardview.widget.CardView>\n\n                <LinearLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginStart=\"112dp\"\n                    android:layout_marginTop=\"12dp\"\n                    android:layout_marginEnd=\"112dp\"\n                    android:gravity=\"center\"\n                    android:orientation=\"vertical\">\n\n                    <Button\n                        android:id=\"@+id/editDetails\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:text=\"@string/edit_details\"\n                        android:textColor=\"@color/white\"\n                        app:icon=\"@drawable/edit\"\n                        app:iconGravity=\"textEnd\" />\n                </LinearLayout>\n\n                <View\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\".5dp\"\n                    android:layout_marginTop=\"20dp\"\n                    android:background=\"#666666\" />\n\n                <RelativeLayout\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginBottom=\"20dp\">\n\n                    <LinearLayout\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_centerInParent=\"true\">\n\n                        <LinearLayout\n                            android:id=\"@+id/logout\"\n                            android:layout_width=\"wrap_content\"\n                            android:layout_height=\"wrap_content\"\n                            android:layout_marginTop=\"20dp\"\n                            android:orientation=\"horizontal\"\n                            tools:ignore=\"UseCompoundDrawables\">\n\n                            <ImageView\n                                android:layout_width=\"24dp\"\n                                android:layout_height=\"24dp\"\n                                android:contentDescription=\"@string/logout\"\n                                android:src=\"@drawable/logout\" />\n\n                            <TextView\n                                android:layout_width=\"wrap_content\"\n                                android:layout_height=\"wrap_content\"\n                                android:layout_marginStart=\"10dp\"\n                                android:text=\"@string/logout\"\n                                android:textSize=\"18sp\" />\n                        </LinearLayout>\n                    </LinearLayout>\n                </RelativeLayout>\n            </LinearLayout>\n        </RelativeLayout>\n    </ScrollView>\n\n    <ProgressBar\n        android:id=\"@+id/progressbarLogout\"\n        style=\"?android:attr/progressBarStyleLarge\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:indeterminate=\"true\"\n        android:indeterminateTint=\"#A846F4\"\n        android:indeterminateTintMode=\"src_atop\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_account.xml b/app/src/main/res/layout/fragment_account.xml
--- a/app/src/main/res/layout/fragment_account.xml	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/res/layout/fragment_account.xml	(date 1650675513991)
@@ -12,7 +12,7 @@
 
         <RelativeLayout
             android:layout_width="match_parent"
-            android:layout_height="405dp">
+            android:layout_height="wrap_content">
 
             <LinearLayout
                 android:layout_width="match_parent"
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"GRADLE\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/.idea/gradle.xml	(date 1650761239611)
@@ -16,5 +16,6 @@
         <option name="resolveModulePerSourceSet" value="false" />
       </GradleProjectSettings>
     </option>
+    <option name="offlineMode" value="true" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DesignSurface\">\n    <option name=\"filePathToZoomLevelMap\">\n      <map>\n        <entry key=\"../../../../../layout/custom_preview.xml\" value=\"0.24166666666666667\" />\n        <entry key=\"app/src/main/res/drawable-hdpi/square.xml\" value=\"0.171\" />\n        <entry key=\"app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/accountbackground.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/address.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/button_back.xml\" value=\"0.1555\" />\n        <entry key=\"app/src/main/res/drawable/chat.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/circle.xml\" value=\"0.165\" />\n        <entry key=\"app/src/main/res/drawable/city.xml\" value=\"0.171\" />\n        <entry key=\"app/src/main/res/drawable/delete.xml\" value=\"0.171\" />\n        <entry key=\"app/src/main/res/drawable/edit.xml\" value=\"0.165\" />\n        <entry key=\"app/src/main/res/drawable/editbutton_back.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/edittext_back.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/email.xml\" value=\"0.1\" />\n        <entry key=\"app/src/main/res/drawable/events.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/home.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/logout.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/password.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/phone.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/pin.xml\" value=\"0.171\" />\n        <entry key=\"app/src/main/res/drawable/profilepic.xml\" value=\"0.165\" />\n        <entry key=\"app/src/main/res/drawable/progress_color.xml\" value=\"0.165\" />\n        <entry key=\"app/src/main/res/drawable/refresh.xml\" value=\"0.171\" />\n        <entry key=\"app/src/main/res/drawable/street.xml\" value=\"0.171\" />\n        <entry key=\"app/src/main/res/drawable/todo.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/drawable/user.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/layout/activity_account.xml\" value=\"0.2905623448943401\" />\n        <entry key=\"app/src/main/res/layout/activity_add.xml\" value=\"0.1\" />\n        <entry key=\"app/src/main/res/layout/activity_chat.xml\" value=\"0.1\" />\n        <entry key=\"app/src/main/res/layout/activity_editdetails.xml\" value=\"0.3052261352539063\" />\n        <entry key=\"app/src/main/res/layout/activity_forgotpassword.xml\" value=\"0.21824798583984376\" />\n        <entry key=\"app/src/main/res/layout/activity_home.xml\" value=\"0.1\" />\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.2796610169491525\" />\n        <entry key=\"app/src/main/res/layout/activity_main.xml\" value=\"0.29583333333333334\" />\n        <entry key=\"app/src/main/res/layout/activity_preferences.xml\" value=\"0.1\" />\n        <entry key=\"app/src/main/res/layout/activity_profilepicture.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/activity_request_list_item.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/activity_signup.xml\" value=\"0.2958099365234375\" />\n        <entry key=\"app/src/main/res/layout/fragment_account.xml\" value=\"0.24701690673828128\" />\n        <entry key=\"app/src/main/res/layout/fragment_chat.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/fragment_drinks.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/fragment_events.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/fragment_first.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/fragment_foods.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/fragment_todo.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/layout/hh.xml\" value=\"0.33765017744423687\" />\n        <entry key=\"app/src/main/res/layout/item.xml\" value=\"0.25010528564453127\" />\n        <entry key=\"app/src/main/res/layout/todo.xml\" value=\"0.19628286491387126\" />\n        <entry key=\"app/src/main/res/menu/menu.xml\" value=\"0.2543822146216332\" />\n        <entry key=\"app/src/main/res/mipmap-anydpi-v26/ic_banner.xml\" value=\"0.2225\" />\n        <entry key=\"app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\" value=\"0.1555\" />\n        <entry key=\"app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\" value=\"0.2225\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/.idea/misc.xml	(date 1651499276844)
@@ -32,8 +32,12 @@
         <entry key="app/src/main/res/drawable/user.xml" value="0.2225" />
         <entry key="app/src/main/res/layout/activity_account.xml" value="0.2905623448943401" />
         <entry key="app/src/main/res/layout/activity_add.xml" value="0.1" />
+        <entry key="app/src/main/res/layout/activity_birthday.xml" value="0.19628286491387126" />
+        <entry key="app/src/main/res/layout/activity_birthday_edit1.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/activity_chat.xml" value="0.1" />
         <entry key="app/src/main/res/layout/activity_editdetails.xml" value="0.3052261352539063" />
+        <entry key="app/src/main/res/layout/activity_event.xml" value="0.1" />
+        <entry key="app/src/main/res/layout/activity_event_invite.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/activity_forgotpassword.xml" value="0.21824798583984376" />
         <entry key="app/src/main/res/layout/activity_home.xml" value="0.1" />
         <entry key="app/src/main/res/layout/activity_login.xml" value="0.2796610169491525" />
@@ -42,13 +46,14 @@
         <entry key="app/src/main/res/layout/activity_profilepicture.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/activity_request_list_item.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/activity_signup.xml" value="0.2958099365234375" />
+        <entry key="app/src/main/res/layout/activity_viewprofile.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/fragment_account.xml" value="0.24701690673828128" />
         <entry key="app/src/main/res/layout/fragment_chat.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/fragment_drinks.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/fragment_events.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/fragment_first.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/fragment_foods.xml" value="0.19628286491387126" />
-        <entry key="app/src/main/res/layout/fragment_home.xml" value="0.19628286491387126" />
+        <entry key="app/src/main/res/layout/fragment_home.xml" value="0.2430060135690789" />
         <entry key="app/src/main/res/layout/fragment_todo.xml" value="0.19628286491387126" />
         <entry key="app/src/main/res/layout/hh.xml" value="0.33765017744423687" />
         <entry key="app/src/main/res/layout/item.xml" value="0.25010528564453127" />
Index: app/src/main/res/layout/activity_event.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_event.xml b/app/src/main/res/layout/activity_event.xml
new file mode 100644
--- /dev/null	(date 1651466313592)
+++ b/app/src/main/res/layout/activity_event.xml	(date 1651466313592)
@@ -0,0 +1,112 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".EventActivity">
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <RelativeLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="24dp"
+                android:layout_marginTop="15dp"
+                android:layout_marginRight="24dp">
+
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:text="@string/choose_a_template"
+                    android:textAlignment="center"
+                    android:textColor="@color/purple_500"
+                    android:textSize="35sp"
+                    android:textStyle="bold" />
+            </RelativeLayout>
+
+            <GridLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="20dp"
+                android:alignmentMode="alignMargins"
+                android:columnCount="2"
+                android:columnOrderPreserved="false"
+                android:rowCount="4">
+
+                <androidx.cardview.widget.CardView
+                    android:id="@+id/eventCardView1"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_rowWeight="1"
+                    android:layout_columnWeight="1"
+                    android:layout_margin="12dp"
+                    app:cardCornerRadius="12dp"
+                    app:cardElevation="6dp">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:gravity="center"
+                        android:orientation="vertical">
+
+                        <ImageView
+                            android:id="@+id/card1"
+                            android:layout_width="match_parent"
+                            android:layout_height="200dp"
+                            android:contentDescription="@string/template_1"
+                            android:scaleType="fitXY" />
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginTop="6dp"
+                            android:layout_marginBottom="6dp"
+                            android:text="@string/template_1"
+                            android:textSize="18sp" />
+                    </LinearLayout>
+                </androidx.cardview.widget.CardView>
+
+                <androidx.cardview.widget.CardView
+                    android:id="@+id/eventCardView2"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_rowWeight="1"
+                    android:layout_columnWeight="1"
+                    android:layout_margin="12dp"
+                    app:cardCornerRadius="12dp"
+                    app:cardElevation="6dp">
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:gravity="center"
+                        android:orientation="vertical">
+
+                        <ImageView
+                            android:id="@+id/card2"
+                            android:layout_width="match_parent"
+                            android:layout_height="200dp"
+                            android:contentDescription="@string/template_2"
+                            android:scaleType="fitXY" />
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:layout_marginTop="6dp"
+                            android:layout_marginBottom="6dp"
+                            android:text="@string/template_2"
+                            android:textSize="18sp" />
+                    </LinearLayout>
+                </androidx.cardview.widget.CardView>
+            </GridLayout>
+        </LinearLayout>
+    </ScrollView>
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/DrinksFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.annotation.SuppressLint;\nimport android.app.Dialog;\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.ItemTouchHelper;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.snackbar.Snackbar;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class DrinksFragment extends Fragment {\n\n    RecyclerView drinksRecycler;\n    DatabaseReference reference;\n    RecyclerDrinkAdapter adapter;\n    List<String> drinks;\n    FloatingActionButton fabDrinks;\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        ViewGroup viewGroup = (ViewGroup) inflater.inflate(R.layout.fragment_drinks, container, false);\n\n        FirebaseAuth authentication = FirebaseAuth.getInstance();\n        FirebaseUser firebaseUser = authentication.getCurrentUser();\n        drinksRecycler = viewGroup.findViewById(R.id.drinksRecycler);\n        reference = FirebaseDatabase.getInstance().getReference().child(\"Users\");\n        drinks = new ArrayList<>();\n        fabDrinks = viewGroup.findViewById(R.id.fabDrinks);\n\n        String userId = firebaseUser.getUid();\n        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                User user = snapshot.getValue(User.class);\n                drinks = user.preferences.get(1);\n                adapter = new RecyclerDrinkAdapter(getActivity(), user.preferences.get(1));\n                drinksRecycler.setLayoutManager(new LinearLayoutManager(getActivity()));\n                drinksRecycler.setAdapter(adapter);\n                adapter.notifyDataSetChanged();\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n\n            }\n        });\n\n        fabDrinks.setOnClickListener(view -> {\n            Dialog d = new Dialog(getActivity());\n            d.setContentView(R.layout.activity_add);\n            EditText item = d.findViewById(R.id.item);\n            Button addItem = d.findViewById(R.id.buttonAdd);\n            Button cancelItem = d.findViewById(R.id.buttonCancel);\n\n            addItem.setOnClickListener(view1 -> {\n                String itemName = item.getText().toString().trim();\n                if (itemName.equals(\"\")) {\n                    Toast.makeText(getActivity(), \"Enter item\", Toast.LENGTH_SHORT).show();\n                } else {\n                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                        @Override\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\n                            User user = snapshot.getValue(User.class);\n                            List<List<String>> completePref = user.preferences;\n                            completePref.get(1).add(itemName);\n                            snapshot.getRef().child(\"preferences\").setValue(completePref);\n                            adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));\n                            drinksRecycler.setAdapter(adapter);\n                            d.dismiss();\n                            Toast.makeText(DrinksFragment.this.getActivity(), itemName + \" has been added to your drink preferences!\", Toast.LENGTH_LONG).show();\n                        }\n\n                        @Override\n                        public void onCancelled(@NonNull DatabaseError error) {\n\n                        }\n                    });\n                }\n            });\n            cancelItem.setOnClickListener(view1 -> d.dismiss());\n            d.show();\n        });\n\n        ItemTouchHelper.SimpleCallback swipe = new ItemTouchHelper.SimpleCallback(0\n                , ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT) {\n            @Override\n            public boolean onMove(@NonNull RecyclerView recyclerView\n                    , @NonNull RecyclerView.ViewHolder viewHolder\n                    , @NonNull RecyclerView.ViewHolder target) {\n                return false;\n            }\n\n            @SuppressLint(\"NotifyDataSetChanged\")\n            @Override\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\n                reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        User user = snapshot.getValue(User.class);\n                        drinks = user.preferences.get(1);\n                        String deletedDrink = drinks.get(viewHolder.getAdapterPosition());\n                        int deletedDrinkIndex = viewHolder.getAdapterPosition();\n                        List<List<String>> completePref = user.preferences;\n                        completePref.get(1).remove(viewHolder.getAdapterPosition());\n                        snapshot.getRef().child(\"preferences\").setValue(completePref);\n                        adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));\n                        drinksRecycler.setAdapter(adapter);\n                        final Snackbar snackbar = Snackbar\n                                .make(drinksRecycler, deletedDrink + \" removed\", Snackbar.LENGTH_LONG);\n                        snackbar.setAction(\"UNDO\", view -> {\n                            adapter.undo(deletedDrink, deletedDrinkIndex);\n                            reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                                @Override\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\n                                    User user = snapshot.getValue(User.class);\n                                    List<List<String>> completePref = user.preferences;\n                                    completePref.get(1).add(deletedDrink);\n                                    snapshot.getRef().child(\"preferences\").setValue(completePref);\n                                    adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));\n                                    drinksRecycler.setAdapter(adapter);\n                                }\n\n                                @Override\n                                public void onCancelled(@NonNull DatabaseError error) {\n\n                                }\n                            });\n                        });\n                        snackbar.setActionTextColor(ContextCompat.getColor(getActivity(), R.color.purple_500));\n                        snackbar.show();\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n            }\n        };\n        new ItemTouchHelper(swipe).attachToRecyclerView(drinksRecycler);\n\n        return viewGroup;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/DrinksFragment.java b/app/src/main/java/com/example/partyplanner/DrinksFragment.java
--- a/app/src/main/java/com/example/partyplanner/DrinksFragment.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/DrinksFragment.java	(date 1650676793022)
@@ -2,7 +2,6 @@
 
 import android.annotation.SuppressLint;
 import android.app.Dialog;
-import android.graphics.Color;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -50,118 +49,137 @@
         drinks = new ArrayList<>();
         fabDrinks = viewGroup.findViewById(R.id.fabDrinks);
 
-        String userId = firebaseUser.getUid();
-        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                User user = snapshot.getValue(User.class);
-                drinks = user.preferences.get(1);
-                adapter = new RecyclerDrinkAdapter(getActivity(), user.preferences.get(1));
-                drinksRecycler.setLayoutManager(new LinearLayoutManager(getActivity()));
-                drinksRecycler.setAdapter(adapter);
-                adapter.notifyDataSetChanged();
-            }
+        if (firebaseUser != null) {
+            String userId = firebaseUser.getUid();
+            reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                @Override
+                public void onDataChange(@NonNull DataSnapshot snapshot) {
+                    User user = snapshot.getValue(User.class);
+                    if (user != null) {
+                        drinks = user.preferences.get(1);
+                        adapter = new RecyclerDrinkAdapter(getActivity(), user.preferences.get(1));
+                        drinksRecycler.setLayoutManager(new LinearLayoutManager(getActivity()));
+                        drinksRecycler.setAdapter(adapter);
+                        adapter.notifyDataSetChanged();
+                    } else {
+                        Toast.makeText(DrinksFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                    }
+                }
 
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
+                @Override
+                public void onCancelled(@NonNull DatabaseError error) {
 
-            }
-        });
+                }
+            });
 
-        fabDrinks.setOnClickListener(view -> {
-            Dialog d = new Dialog(getActivity());
-            d.setContentView(R.layout.activity_add);
-            EditText item = d.findViewById(R.id.item);
-            Button addItem = d.findViewById(R.id.buttonAdd);
-            Button cancelItem = d.findViewById(R.id.buttonCancel);
+            fabDrinks.setOnClickListener(view -> {
+                Dialog d = new Dialog(getActivity());
+                d.setContentView(R.layout.activity_add);
+                EditText item = d.findViewById(R.id.item);
+                Button addItem = d.findViewById(R.id.buttonAdd);
+                Button cancelItem = d.findViewById(R.id.buttonCancel);
 
-            addItem.setOnClickListener(view1 -> {
-                String itemName = item.getText().toString().trim();
-                if (itemName.equals("")) {
-                    Toast.makeText(getActivity(), "Enter item", Toast.LENGTH_SHORT).show();
-                } else {
-                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                        @Override
-                        public void onDataChange(@NonNull DataSnapshot snapshot) {
-                            User user = snapshot.getValue(User.class);
-                            List<List<String>> completePref = user.preferences;
-                            completePref.get(1).add(itemName);
-                            snapshot.getRef().child("preferences").setValue(completePref);
-                            adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));
-                            drinksRecycler.setAdapter(adapter);
-                            d.dismiss();
-                            Toast.makeText(DrinksFragment.this.getActivity(), itemName + " has been added to your drink preferences!", Toast.LENGTH_LONG).show();
-                        }
+                addItem.setOnClickListener(view1 -> {
+                    String itemName = item.getText().toString().trim();
+                    if (itemName.equals("")) {
+                        Toast.makeText(getActivity(), "Enter item", Toast.LENGTH_SHORT).show();
+                    } else {
+                        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                User user = snapshot.getValue(User.class);
+                                if (user != null) {
+                                    List<List<String>> completePref = user.preferences;
+                                    completePref.get(1).add(itemName);
+                                    snapshot.getRef().child("preferences").setValue(completePref);
+                                    adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));
+                                    drinksRecycler.setAdapter(adapter);
+                                    d.dismiss();
+                                    Toast.makeText(DrinksFragment.this.getActivity(), itemName + " has been added to your drink preferences!", Toast.LENGTH_LONG).show();
+                                } else {
+                                    Toast.makeText(DrinksFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                                }
+                            }
 
-                        @Override
-                        public void onCancelled(@NonNull DatabaseError error) {
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
 
-                        }
-                    });
-                }
-            });
-            cancelItem.setOnClickListener(view1 -> d.dismiss());
-            d.show();
-        });
+                            }
+                        });
+                    }
+                });
+                cancelItem.setOnClickListener(view1 -> d.dismiss());
+                d.show();
+            });
 
-        ItemTouchHelper.SimpleCallback swipe = new ItemTouchHelper.SimpleCallback(0
-                , ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT) {
-            @Override
-            public boolean onMove(@NonNull RecyclerView recyclerView
-                    , @NonNull RecyclerView.ViewHolder viewHolder
-                    , @NonNull RecyclerView.ViewHolder target) {
-                return false;
-            }
+            ItemTouchHelper.SimpleCallback swipe = new ItemTouchHelper.SimpleCallback(0
+                    , ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT) {
+                @Override
+                public boolean onMove(@NonNull RecyclerView recyclerView
+                        , @NonNull RecyclerView.ViewHolder viewHolder
+                        , @NonNull RecyclerView.ViewHolder target) {
+                    return false;
+                }
 
-            @SuppressLint("NotifyDataSetChanged")
-            @Override
-            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
-                reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        User user = snapshot.getValue(User.class);
-                        drinks = user.preferences.get(1);
-                        String deletedDrink = drinks.get(viewHolder.getAdapterPosition());
-                        int deletedDrinkIndex = viewHolder.getAdapterPosition();
-                        List<List<String>> completePref = user.preferences;
-                        completePref.get(1).remove(viewHolder.getAdapterPosition());
-                        snapshot.getRef().child("preferences").setValue(completePref);
-                        adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));
-                        drinksRecycler.setAdapter(adapter);
-                        final Snackbar snackbar = Snackbar
-                                .make(drinksRecycler, deletedDrink + " removed", Snackbar.LENGTH_LONG);
-                        snackbar.setAction("UNDO", view -> {
-                            adapter.undo(deletedDrink, deletedDrinkIndex);
-                            reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                                @Override
-                                public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                    User user = snapshot.getValue(User.class);
-                                    List<List<String>> completePref = user.preferences;
-                                    completePref.get(1).add(deletedDrink);
-                                    snapshot.getRef().child("preferences").setValue(completePref);
-                                    adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));
-                                    drinksRecycler.setAdapter(adapter);
-                                }
+                @SuppressLint("NotifyDataSetChanged")
+                @Override
+                public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
+                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                        @Override
+                        public void onDataChange(@NonNull DataSnapshot snapshot) {
+                            User user = snapshot.getValue(User.class);
+                            if (user != null) {
+                                drinks = user.preferences.get(1);
+                                String deletedDrink = drinks.get(viewHolder.getAdapterPosition());
+                                int deletedDrinkIndex = viewHolder.getAdapterPosition();
+                                List<List<String>> completePref = user.preferences;
+                                completePref.get(1).remove(viewHolder.getAdapterPosition());
+                                snapshot.getRef().child("preferences").setValue(completePref);
+                                adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));
+                                drinksRecycler.setAdapter(adapter);
+                                final Snackbar snackbar = Snackbar
+                                        .make(drinksRecycler, deletedDrink + " removed", Snackbar.LENGTH_LONG);
+                                snackbar.setAction("UNDO", view -> {
+                                    adapter.undo(deletedDrink, deletedDrinkIndex);
+                                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                                        @Override
+                                        public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                            User user = snapshot.getValue(User.class);
+                                            if (user != null) {
+                                                List<List<String>> completePref = user.preferences;
+                                                completePref.get(1).add(deletedDrink);
+                                                snapshot.getRef().child("preferences").setValue(completePref);
+                                                adapter = new RecyclerDrinkAdapter(getActivity(), completePref.get(1));
+                                                drinksRecycler.setAdapter(adapter);
+                                            } else {
+                                                Toast.makeText(DrinksFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                                            }
+                                        }
 
-                                @Override
-                                public void onCancelled(@NonNull DatabaseError error) {
+                                        @Override
+                                        public void onCancelled(@NonNull DatabaseError error) {
 
-                                }
-                            });
-                        });
-                        snackbar.setActionTextColor(ContextCompat.getColor(getActivity(), R.color.purple_500));
-                        snackbar.show();
-                    }
+                                        }
+                                    });
+                                });
+                                snackbar.setActionTextColor(ContextCompat.getColor(getActivity(), R.color.purple_500));
+                                snackbar.show();
+                            } else {
+                                Toast.makeText(DrinksFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                            }
+                        }
 
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
+                        @Override
+                        public void onCancelled(@NonNull DatabaseError error) {
 
-                    }
-                });
-            }
-        };
-        new ItemTouchHelper(swipe).attachToRecyclerView(drinksRecycler);
-
+                        }
+                    });
+                }
+            };
+            new ItemTouchHelper(swipe).attachToRecyclerView(drinksRecycler);
+        } else {
+            Toast.makeText(DrinksFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+        }
         return viewGroup;
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/partyplanner/RecyclerDrinkAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.annotation.SuppressLint;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.List;\n\npublic class RecyclerDrinkAdapter extends RecyclerView.Adapter<RecyclerDrinkAdapter.MyViewHolder> {\n\n    Context context;\n    List<String> drinks;\n\n    public RecyclerDrinkAdapter(Context context, List<String> drinks) {\n        this.context = context;\n        this.drinks = drinks;\n    }\n\n    @NonNull\n    @Override\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(context).inflate(R.layout.item, parent, false);\n        return new MyViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull MyViewHolder holder, @SuppressLint(\"RecyclerView\") int position) {\n        holder.drinkItem.setText(drinks.get(position));\n\n        holder.eachItemBox.setOnClickListener(view -> {\n            Dialog d = new Dialog(context);\n            d.setContentView(R.layout.activity_add);\n            TextView title = d.findViewById(R.id.textView6);\n            EditText drink = d.findViewById(R.id.item);\n            Button addDrink = d.findViewById(R.id.buttonAdd);\n            Button cancelDrink = d.findViewById(R.id.buttonCancel);\n            title.setText(\"Update Drink\");\n            addDrink.setText(\"Update\");\n            drink.setText(drinks.get(position));\n            String prev = drink.getText().toString().trim();\n            addDrink.setOnClickListener(view1 -> {\n                String itemName = drink.getText().toString().trim();\n                if (drink.getText().toString().equals(\"\")) {\n                    Toast.makeText(context, \"Enter details\"\n                            , Toast.LENGTH_SHORT).show();\n                } else {\n                    FirebaseAuth authentication = FirebaseAuth.getInstance();\n                    FirebaseUser firebaseUser = authentication.getCurrentUser();\n                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child(\"Users\");\n                    String userId = firebaseUser.getUid();\n                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                        @Override\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\n                            User user = snapshot.getValue(User.class);\n                            List<List<String>> completePref = user.preferences;\n                            completePref.get(1).remove(position);\n                            completePref.get(1).add(itemName);\n                            snapshot.getRef().child(\"preferences\").setValue(completePref);\n                            drinks = user.preferences.get(1);\n                            notifyItemChanged(position);\n                            d.dismiss();\n                            Toast.makeText(context, prev + \" has been updated!\", Toast.LENGTH_LONG).show();\n                        }\n\n                        @Override\n                        public void onCancelled(@NonNull DatabaseError error) {\n\n                        }\n                    });\n                }\n            });\n            cancelDrink.setOnClickListener(view1 -> d.dismiss());\n            d.show();\n        });\n    }\n\n    @Override\n    public int getItemCount() {\n        return drinks.size();\n    }\n\n    public void undo(String item, int position) {\n        drinks.add(position, item);\n        notifyItemInserted(position);\n    }\n\n    public static class MyViewHolder extends RecyclerView.ViewHolder {\n\n        TextView drinkItem;\n        LinearLayout eachItemBox;\n\n        public MyViewHolder(@NonNull View itemView) {\n            super(itemView);\n\n            drinkItem = itemView.findViewById(R.id.eachItem);\n            eachItemBox = itemView.findViewById(R.id.eachItemBox);\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/RecyclerDrinkAdapter.java b/app/src/main/java/com/example/partyplanner/RecyclerDrinkAdapter.java
--- a/app/src/main/java/com/example/partyplanner/RecyclerDrinkAdapter.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/RecyclerDrinkAdapter.java	(date 1650676793013)
@@ -66,26 +66,34 @@
                     FirebaseAuth authentication = FirebaseAuth.getInstance();
                     FirebaseUser firebaseUser = authentication.getCurrentUser();
                     DatabaseReference reference = FirebaseDatabase.getInstance().getReference().child("Users");
-                    String userId = firebaseUser.getUid();
-                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                        @Override
-                        public void onDataChange(@NonNull DataSnapshot snapshot) {
-                            User user = snapshot.getValue(User.class);
-                            List<List<String>> completePref = user.preferences;
-                            completePref.get(1).remove(position);
-                            completePref.get(1).add(itemName);
-                            snapshot.getRef().child("preferences").setValue(completePref);
-                            drinks = user.preferences.get(1);
-                            notifyItemChanged(position);
-                            d.dismiss();
-                            Toast.makeText(context, prev + " has been updated!", Toast.LENGTH_LONG).show();
-                        }
+                    if (firebaseUser != null) {
+                        String userId = firebaseUser.getUid();
+                        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                User user = snapshot.getValue(User.class);
+                                if (user != null) {
+                                    List<List<String>> completePref = user.preferences;
+                                    completePref.get(1).remove(position);
+                                    completePref.get(1).add(itemName);
+                                    snapshot.getRef().child("preferences").setValue(completePref);
+                                    drinks = user.preferences.get(1);
+                                    notifyItemChanged(position);
+                                    d.dismiss();
+                                    Toast.makeText(context, prev + " has been updated!", Toast.LENGTH_LONG).show();
+                                } else {
+                                    Toast.makeText(context, "User not found!!", Toast.LENGTH_LONG).show();
+                                }
+                            }
 
-                        @Override
-                        public void onCancelled(@NonNull DatabaseError error) {
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
 
-                        }
-                    });
+                            }
+                        });
+                    } else {
+                        Toast.makeText(context, "User not found!!", Toast.LENGTH_LONG).show();
+                    }
                 }
             });
             cancelDrink.setOnClickListener(view1 -> d.dismiss());
Index: app/src/main/java/com/example/partyplanner/FoodsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.partyplanner;\n\nimport android.annotation.SuppressLint;\nimport android.app.Dialog;\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.Toast;\n\nimport androidx.annotation.NonNull;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.Fragment;\nimport androidx.recyclerview.widget.ItemTouchHelper;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.google.android.material.snackbar.Snackbar;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class FoodsFragment extends Fragment {\n\n    RecyclerView foodsRecycler;\n    DatabaseReference reference;\n    RecyclerFoodAdapter adapter;\n    List<String> foods;\n    FloatingActionButton fabFoods;\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        ViewGroup viewGroup = (ViewGroup) inflater.inflate(R.layout.fragment_foods, container, false);\n\n        FirebaseAuth authentication = FirebaseAuth.getInstance();\n        FirebaseUser firebaseUser = authentication.getCurrentUser();\n        foodsRecycler = viewGroup.findViewById(R.id.foodsRecycler);\n        reference = FirebaseDatabase.getInstance().getReference().child(\"Users\");\n        foods = new ArrayList<>();\n        fabFoods = viewGroup.findViewById(R.id.fabFoods);\n\n        String userId = firebaseUser.getUid();\n        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                User user = snapshot.getValue(User.class);\n                foods = user.preferences.get(0);\n                adapter = new RecyclerFoodAdapter(getActivity(), user.preferences.get(0));\n                foodsRecycler.setLayoutManager(new LinearLayoutManager(getActivity()));\n                foodsRecycler.setAdapter(adapter);\n                adapter.notifyDataSetChanged();\n            }\n\n            @Override\n            public void onCancelled(@NonNull DatabaseError error) {\n\n            }\n        });\n\n        fabFoods.setOnClickListener(view -> {\n            Dialog d = new Dialog(getActivity());\n            d.setContentView(R.layout.activity_add);\n            EditText item = d.findViewById(R.id.item);\n            Button addItem = d.findViewById(R.id.buttonAdd);\n            Button cancelItem = d.findViewById(R.id.buttonCancel);\n\n            addItem.setOnClickListener(view1 -> {\n                String itemName = item.getText().toString().trim();\n                if (itemName.equals(\"\")) {\n                    Toast.makeText(getActivity(), \"Enter item\", Toast.LENGTH_SHORT).show();\n                } else {\n                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                        @Override\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\n                            User user = snapshot.getValue(User.class);\n                            List<List<String>> completePref = user.preferences;\n                            completePref.get(0).add(itemName);\n                            snapshot.getRef().child(\"preferences\").setValue(completePref);\n                            adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));\n                            foodsRecycler.setAdapter(adapter);\n                            d.dismiss();\n                            Toast.makeText(FoodsFragment.this.getActivity(), itemName + \" has been added to your food preferences!\", Toast.LENGTH_LONG).show();\n                        }\n\n                        @Override\n                        public void onCancelled(@NonNull DatabaseError error) {\n\n                        }\n                    });\n                }\n            });\n            cancelItem.setOnClickListener(view1 -> d.dismiss());\n            d.show();\n        });\n\n        ItemTouchHelper.SimpleCallback swipe = new ItemTouchHelper.SimpleCallback(0\n                , ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT) {\n            @Override\n            public boolean onMove(@NonNull RecyclerView recyclerView\n                    , @NonNull RecyclerView.ViewHolder viewHolder\n                    , @NonNull RecyclerView.ViewHolder target) {\n                return false;\n            }\n\n            @SuppressLint(\"NotifyDataSetChanged\")\n            @Override\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\n                reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        User user = snapshot.getValue(User.class);\n                        foods = user.preferences.get(0);\n                        String deletedFood = foods.get(viewHolder.getAdapterPosition());\n                        int deletedFoodIndex = viewHolder.getAdapterPosition();\n                        List<List<String>> completePref = user.preferences;\n                        completePref.get(0).remove(viewHolder.getAdapterPosition());\n                        snapshot.getRef().child(\"preferences\").setValue(completePref);\n                        adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));\n                        foodsRecycler.setAdapter(adapter);\n                        final Snackbar snackbar = Snackbar\n                                .make(foodsRecycler, deletedFood + \" removed\", Snackbar.LENGTH_LONG);\n                        snackbar.setAction(\"UNDO\", view -> {\n                            adapter.undo(deletedFood, deletedFoodIndex);\n                            reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {\n                                @Override\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\n                                    User user = snapshot.getValue(User.class);\n                                    List<List<String>> completePref = user.preferences;\n                                    completePref.get(0).add(deletedFood);\n                                    snapshot.getRef().child(\"preferences\").setValue(completePref);\n                                    adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));\n                                    foodsRecycler.setAdapter(adapter);\n                                }\n\n                                @Override\n                                public void onCancelled(@NonNull DatabaseError error) {\n\n                                }\n                            });\n                        });\n                        snackbar.setActionTextColor(ContextCompat.getColor(getActivity(), R.color.purple_500));\n                        snackbar.show();\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n\n                    }\n                });\n            }\n        };\n        new ItemTouchHelper(swipe).attachToRecyclerView(foodsRecycler);\n\n        return viewGroup;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/partyplanner/FoodsFragment.java b/app/src/main/java/com/example/partyplanner/FoodsFragment.java
--- a/app/src/main/java/com/example/partyplanner/FoodsFragment.java	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/java/com/example/partyplanner/FoodsFragment.java	(date 1650676792955)
@@ -2,7 +2,6 @@
 
 import android.annotation.SuppressLint;
 import android.app.Dialog;
-import android.graphics.Color;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -50,118 +49,137 @@
         foods = new ArrayList<>();
         fabFoods = viewGroup.findViewById(R.id.fabFoods);
 
-        String userId = firebaseUser.getUid();
-        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-            @Override
-            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                User user = snapshot.getValue(User.class);
-                foods = user.preferences.get(0);
-                adapter = new RecyclerFoodAdapter(getActivity(), user.preferences.get(0));
-                foodsRecycler.setLayoutManager(new LinearLayoutManager(getActivity()));
-                foodsRecycler.setAdapter(adapter);
-                adapter.notifyDataSetChanged();
-            }
+        if (firebaseUser != null) {
+            String userId = firebaseUser.getUid();
+            reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                @Override
+                public void onDataChange(@NonNull DataSnapshot snapshot) {
+                    User user = snapshot.getValue(User.class);
+                    if (user != null) {
+                        foods = user.preferences.get(0);
+                        adapter = new RecyclerFoodAdapter(getActivity(), user.preferences.get(0));
+                        foodsRecycler.setLayoutManager(new LinearLayoutManager(getActivity()));
+                        foodsRecycler.setAdapter(adapter);
+                        adapter.notifyDataSetChanged();
+                    } else {
+                        Toast.makeText(FoodsFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                    }
+                }
 
-            @Override
-            public void onCancelled(@NonNull DatabaseError error) {
+                @Override
+                public void onCancelled(@NonNull DatabaseError error) {
 
-            }
-        });
+                }
+            });
 
-        fabFoods.setOnClickListener(view -> {
-            Dialog d = new Dialog(getActivity());
-            d.setContentView(R.layout.activity_add);
-            EditText item = d.findViewById(R.id.item);
-            Button addItem = d.findViewById(R.id.buttonAdd);
-            Button cancelItem = d.findViewById(R.id.buttonCancel);
+            fabFoods.setOnClickListener(view -> {
+                Dialog d = new Dialog(getActivity());
+                d.setContentView(R.layout.activity_add);
+                EditText item = d.findViewById(R.id.item);
+                Button addItem = d.findViewById(R.id.buttonAdd);
+                Button cancelItem = d.findViewById(R.id.buttonCancel);
 
-            addItem.setOnClickListener(view1 -> {
-                String itemName = item.getText().toString().trim();
-                if (itemName.equals("")) {
-                    Toast.makeText(getActivity(), "Enter item", Toast.LENGTH_SHORT).show();
-                } else {
-                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                        @Override
-                        public void onDataChange(@NonNull DataSnapshot snapshot) {
-                            User user = snapshot.getValue(User.class);
-                            List<List<String>> completePref = user.preferences;
-                            completePref.get(0).add(itemName);
-                            snapshot.getRef().child("preferences").setValue(completePref);
-                            adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));
-                            foodsRecycler.setAdapter(adapter);
-                            d.dismiss();
-                            Toast.makeText(FoodsFragment.this.getActivity(), itemName + " has been added to your food preferences!", Toast.LENGTH_LONG).show();
-                        }
+                addItem.setOnClickListener(view1 -> {
+                    String itemName = item.getText().toString().trim();
+                    if (itemName.equals("")) {
+                        Toast.makeText(getActivity(), "Enter item", Toast.LENGTH_SHORT).show();
+                    } else {
+                        reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                User user = snapshot.getValue(User.class);
+                                if (user != null) {
+                                    List<List<String>> completePref = user.preferences;
+                                    completePref.get(0).add(itemName);
+                                    snapshot.getRef().child("preferences").setValue(completePref);
+                                    adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));
+                                    foodsRecycler.setAdapter(adapter);
+                                    d.dismiss();
+                                    Toast.makeText(FoodsFragment.this.getActivity(), itemName + " has been added to your food preferences!", Toast.LENGTH_LONG).show();
+                                } else {
+                                    Toast.makeText(FoodsFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                                }
+                            }
 
-                        @Override
-                        public void onCancelled(@NonNull DatabaseError error) {
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
 
-                        }
-                    });
-                }
-            });
-            cancelItem.setOnClickListener(view1 -> d.dismiss());
-            d.show();
-        });
+                            }
+                        });
+                    }
+                });
+                cancelItem.setOnClickListener(view1 -> d.dismiss());
+                d.show();
+            });
 
-        ItemTouchHelper.SimpleCallback swipe = new ItemTouchHelper.SimpleCallback(0
-                , ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT) {
-            @Override
-            public boolean onMove(@NonNull RecyclerView recyclerView
-                    , @NonNull RecyclerView.ViewHolder viewHolder
-                    , @NonNull RecyclerView.ViewHolder target) {
-                return false;
-            }
+            ItemTouchHelper.SimpleCallback swipe = new ItemTouchHelper.SimpleCallback(0
+                    , ItemTouchHelper.RIGHT | ItemTouchHelper.LEFT) {
+                @Override
+                public boolean onMove(@NonNull RecyclerView recyclerView
+                        , @NonNull RecyclerView.ViewHolder viewHolder
+                        , @NonNull RecyclerView.ViewHolder target) {
+                    return false;
+                }
 
-            @SuppressLint("NotifyDataSetChanged")
-            @Override
-            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
-                reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        User user = snapshot.getValue(User.class);
-                        foods = user.preferences.get(0);
-                        String deletedFood = foods.get(viewHolder.getAdapterPosition());
-                        int deletedFoodIndex = viewHolder.getAdapterPosition();
-                        List<List<String>> completePref = user.preferences;
-                        completePref.get(0).remove(viewHolder.getAdapterPosition());
-                        snapshot.getRef().child("preferences").setValue(completePref);
-                        adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));
-                        foodsRecycler.setAdapter(adapter);
-                        final Snackbar snackbar = Snackbar
-                                .make(foodsRecycler, deletedFood + " removed", Snackbar.LENGTH_LONG);
-                        snackbar.setAction("UNDO", view -> {
-                            adapter.undo(deletedFood, deletedFoodIndex);
-                            reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
-                                @Override
-                                public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                    User user = snapshot.getValue(User.class);
-                                    List<List<String>> completePref = user.preferences;
-                                    completePref.get(0).add(deletedFood);
-                                    snapshot.getRef().child("preferences").setValue(completePref);
-                                    adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));
-                                    foodsRecycler.setAdapter(adapter);
-                                }
+                @SuppressLint("NotifyDataSetChanged")
+                @Override
+                public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {
+                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                        @Override
+                        public void onDataChange(@NonNull DataSnapshot snapshot) {
+                            User user = snapshot.getValue(User.class);
+                            if (user != null) {
+                                foods = user.preferences.get(0);
+                                String deletedFood = foods.get(viewHolder.getAdapterPosition());
+                                int deletedFoodIndex = viewHolder.getAdapterPosition();
+                                List<List<String>> completePref = user.preferences;
+                                completePref.get(0).remove(viewHolder.getAdapterPosition());
+                                snapshot.getRef().child("preferences").setValue(completePref);
+                                adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));
+                                foodsRecycler.setAdapter(adapter);
+                                final Snackbar snackbar = Snackbar
+                                        .make(foodsRecycler, deletedFood + " removed", Snackbar.LENGTH_LONG);
+                                snackbar.setAction("UNDO", view -> {
+                                    adapter.undo(deletedFood, deletedFoodIndex);
+                                    reference.child(userId).addListenerForSingleValueEvent(new ValueEventListener() {
+                                        @Override
+                                        public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                            User user = snapshot.getValue(User.class);
+                                            if (user != null) {
+                                                List<List<String>> completePref = user.preferences;
+                                                completePref.get(0).add(deletedFood);
+                                                snapshot.getRef().child("preferences").setValue(completePref);
+                                                adapter = new RecyclerFoodAdapter(getActivity(), completePref.get(0));
+                                                foodsRecycler.setAdapter(adapter);
+                                            } else {
+                                                Toast.makeText(FoodsFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                                            }
+                                        }
 
-                                @Override
-                                public void onCancelled(@NonNull DatabaseError error) {
+                                        @Override
+                                        public void onCancelled(@NonNull DatabaseError error) {
 
-                                }
-                            });
-                        });
-                        snackbar.setActionTextColor(ContextCompat.getColor(getActivity(), R.color.purple_500));
-                        snackbar.show();
-                    }
+                                        }
+                                    });
+                                });
+                                snackbar.setActionTextColor(ContextCompat.getColor(getActivity(), R.color.purple_500));
+                                snackbar.show();
+                            } else {
+                                Toast.makeText(FoodsFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+                            }
+                        }
 
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
+                        @Override
+                        public void onCancelled(@NonNull DatabaseError error) {
 
-                    }
-                });
-            }
-        };
-        new ItemTouchHelper(swipe).attachToRecyclerView(foodsRecycler);
-
+                        }
+                    });
+                }
+            };
+            new ItemTouchHelper(swipe).attachToRecyclerView(foodsRecycler);
+        } else {
+            Toast.makeText(FoodsFragment.this.getActivity(), "User not found!!", Toast.LENGTH_LONG).show();
+        }
         return viewGroup;
     }
 }
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">Party Planner</string>\n    <string name=\"party_planner\">Party Planner</string>\n    <string name=\"hosting_a_party_done_right\">Hosting a party done right</string>\n    <string name=\"login\">Login</string>\n    <string name=\"forgot_password\">Forgot Password?</string>\n    <string name=\"sign_up\">Sign Up</string>\n    <string name=\"email_address\">Email Address</string>\n    <string name=\"password\">Password</string>\n    <string name=\"register\">Register</string>\n    <string name=\"not_an_existing_user\">Not an existing user?</string>\n    <string name=\"confirm_password\">Confirm password</string>\n    <string name=\"username\">Username</string>\n    <string name=\"already_an_existing_user\">Already an existing user?</string>\n    <string name=\"design\">Design</string>\n    <string name=\"reset_password\">Reset Password</string>\n    <string name=\"want_to_go_back\">Want to go back?</string>\n    <string name=\"send_mail\">Send mail</string>\n    <string name=\"account\">Account</string>\n    <string name=\"logout\">Logout</string>\n    <string name=\"profile_picture\">Profile picture</string>\n    <string name=\"name\">Name</string>\n    <string name=\"events\">EVENTS</string>\n    <string name=\"hosted\">Hosted</string>\n    <string name=\"_12\">12</string>\n    <string name=\"attended\">Attended</string>\n    <string name=\"phone_number\">Phone number</string>\n    <string name=\"address\">Address</string>\n    <string name=\"edit_details\">Edit details</string>\n    <string name=\"refresh\">Refresh</string>\n    <string name=\"street_and_unit\">Street and Unit</string>\n    <string name=\"city_and_state\">City and State</string>\n    <string name=\"pincode\">Pincode</string>\n    <string name=\"change_photo\">Change photo</string>\n    <string name=\"address1\">Address:</string>\n    <string name=\"cancel\">Cancel</string>\n    <string name=\"update\">Update</string>\n    <string name=\"tab1\">Tab1</string>\n    <string name=\"delete_account\">Delete Account</string>\n    <string name=\"drinks\">Drinks</string>\n    <string name=\"foods\">Foods</string>\n    <string name=\"preferences\">PREFERENCES</string>\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\n    <string name=\"add\">Add</string>\n    <string name=\"email\">Email</string>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 44b13756b96040cc1dc472d8b7e8c9956c0a1188)
+++ b/app/src/main/res/values/strings.xml	(date 1650830887078)
@@ -43,4 +43,22 @@
     <string name="hello_blank_fragment">Hello blank fragment</string>
     <string name="add">Add</string>
     <string name="email">Email</string>
+    <string name="my_templates">My Templates</string>
+    <string name="_6_events">6 events</string>
+    <string name="birthdays">Birthdays</string>
+    <string name="wedding">Wedding</string>
+    <string name="pizza">Pizza</string>
+    <string name="christmas">Christmas</string>
+    <string name="halloween">Halloween</string>
+    <string name="dance">Dance</string>
+    <string name="template_1">Template 1</string>
+    <string name="template_2">Template 2</string>
+    <string name="template_3">Template 3</string>
+    <string name="template_4">Template 4</string>
+    <string name="template_5">Template 5</string>
+    <string name="template_6">Template 6</string>
+    <string name="template_7">Template 7</string>
+    <string name="template_8">Template 8</string>
+    <string name="choose_a_template">Choose a Template</string>
+    <string name="api_key">AIzaSyB_BQVCjXn_yvna3JUEd7O0VAKi2SUfpjI</string>
 </resources>
\ No newline at end of file
